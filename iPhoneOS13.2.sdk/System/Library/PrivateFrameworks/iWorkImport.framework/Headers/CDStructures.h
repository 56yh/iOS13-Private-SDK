//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Dec  5 2019 09:59:31).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class NSDate, NSSet, NSString, NSUUID, TSCEFunctionSpec, TSCEReferenceSetWrapper, TSDTexturedRectangle, TSKBooleanFormat, TSKCustomFormatWrapper, TSKDateTimeFormat, TSUCustomFormat;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTNodeArrayArchive;

struct ASTNodeArrayArchive_ASTStickyBits;

struct ASTNodeArrayArchive_ASTUidList;

struct ASTNodeArrayArchive_ASTUidTract {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ASTNodeArrayArchive_ASTUidList _field5;
    struct ASTNodeArrayArchive_ASTUidList _field6;
    BOOL _field7;
    int _field8;
    BOOL _field9;
};

struct ASTNodeArrayArchive_ASTUidTractList {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> _field5;
    struct ASTNodeArrayArchive_ASTStickyBits _field6;
};

struct AbstractOperation;

struct AccumulatorArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct CellValueArchive _field5;
    struct CellValueArchive _field6;
    struct CellValueArchive _field7;
    struct CellValueArchive _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    double _field15;
    double _field16;
    unsigned int _field17;
    BOOL _field18;
};

struct Action;

struct ActionFinder;

struct ActionGhostSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
};

struct AllFootnoteSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
};

struct AnimationAttributesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
    struct Color _field10;
    struct PathSourceArchive _field11;
    struct PathSourceArchive _field12;
    struct PathSourceArchive _field13;
    double _field14;
    double _field15;
    unsigned int _field16;
    unsigned int _field17;
    double _field18;
    BOOL _field19;
    BOOL _field20;
};

struct ArchiveInfo {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    struct RepeatedPtrField<TSP::MessageInfo> message_infos_;
    NSUInteger identifier_;
    BOOL should_merge_;
};

struct Arena;

struct ArenaStringPtr {
    basic_string_23d93216 ptr_;
};

struct ArgumentPlaceholderNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ArrayNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AttributeCollection {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> _field2;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> _field3;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> _field4;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> _field5;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field6;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> _field7;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> _field8;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> _field9;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> _field10;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> _field11;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> _field12;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> _field13;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> _field14;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> _field15;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> _field16;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> _field17;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> _field18;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> _field19;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> _field20;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> _field21;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> _field22;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> _field23;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> _field24;
};

struct AttributeSpecs {
    NSUInteger _field1;
    NSUInteger _field2;
    NSUInteger _field3;
};

struct Attribution {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
};

struct AxisGridLocation {
    BOOL _field1;
    NSUInteger _field2;
    NSUInteger _field3;
    tvec3_17f03ce0 _field4;
};

struct BarElementInfo {
    BOOL _field1;
    float _field2;
    BOOL _field3;
    NSUInteger _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    BOOL hasTopBevel;
    BOOL hasBottomBevel;
    BOOL isCylindrical;
    BOOL isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BezierPathSourceArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Size _field6;
    struct Path _field7;
};

struct BlendState {
    BOOL mBlend;
    int mBlendMode;
};

struct BookmarkFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct SmartFieldArchive _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct BooleanCellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FormatStructArchive _field5;
    BOOL _field6;
    BOOL _field7;
};

struct BooleanNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    BOOL _field6;
};

struct BuildArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Reference _field6;
    struct BuildAttributesArchive _field7;
    double _field8;
    int _field9;
};

struct BuildAttributesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct ArenaStringPtr _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Color _field7;
    struct AnimationAttributesArchive _field8;
    struct PathSourceArchive _field9;
    unsigned int _field10;
    unsigned int _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    double _field17;
    double _field18;
    int _field19;
    int _field20;
    double _field21;
    int _field22;
    int _field23;
    double _field24;
    unsigned int _field25;
    BOOL _field26;
    BOOL _field27;
    BOOL _field28;
    BOOL _field29;
    int _field30;
    unsigned int _field31;
    unsigned int _field32;
    BOOL _field33;
    double _field34;
    double _field35;
    int _field36;
    struct CachedSize _field37;
};

struct BuildChunkArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct BuildChunkIdentifierArchive _field6;
    struct UUID _field7;
    double _field8;
    double _field9;
    unsigned int _field10;
    BOOL _field11;
    BOOL _field12;
};

struct BuildChunkIdentifierArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    int _field6;
};

struct CC_SHA1state_st {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8[16];
    int _field9;
};

struct CFUUIDArchive;

struct CachedSize {
    struct atomic<int> size_;
};

struct CalloutPathSourceArchive;

struct CategoryOrderArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
};

struct CategoryOwnerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive> _field5;
    struct UUID _field6;
};

struct CategoryOwnerArchive_GroupByArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::GroupColumnArchive> _field5;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggregatorArchive> _field6;
    struct RepeatedPtrField<TST::ColumnAggregateArchive> _field7;
    struct UUID _field8;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive _field9;
    struct CellCoordinateArchive _field10;
    struct CellCoordinateArchive _field11;
    struct CellCoordinateArchive _field12;
    struct CellCoordinateArchive _field13;
    struct CellCoordinateArchive _field14;
    struct CellCoordinateArchive _field15;
    BOOL _field16;
};

struct CategoryOwnerArchive_GroupByArchive_AggNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggNodeArchive> _field5;
    struct CellCoordinateArchive _field6;
    struct AccumulatorArchive _field7;
};

struct CategoryOwnerArchive_GroupByArchive_AggregatorArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct CategoryOwnerArchive_GroupByArchive_AggNodeArchive _field6;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive> _field5;
    RepeatedPtrField_c4607516 _field6;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field7;
    struct UUID _field8;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive _field9;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive _field10;
    struct CellValueArchive _field11;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSK::FormatStructArchive> _field5;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive> _field6;
    struct CellValueArchive _field7;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field5;
};

struct CategoryReferenceArchive;

struct CellBorderArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StrokeArchive _field5;
    struct StrokeArchive _field6;
    struct StrokeArchive _field7;
    struct StrokeArchive _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
};

struct CellCoordinateArchive;

struct CellCoordinateVectorArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field5;
};

struct CellID;

struct CellRange;

struct CellReferenceArchive;

struct CellRegion {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
};

struct CellSpecArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FormulaArchive _field5;
    struct Reference _field6;
    double _field7;
    double _field8;
    double _field9;
    unsigned int _field10;
    BOOL _field11;
    BOOL _field12;
};

struct CellStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct CellStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct CellStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FillArchive _field5;
    struct Deprecated_TableStrokeArchive _field6;
    struct Deprecated_TableStrokeArchive _field7;
    struct Deprecated_TableStrokeArchive _field8;
    struct Deprecated_TableStrokeArchive _field9;
    struct PaddingArchive _field10;
    struct StrokeArchive _field11;
    struct StrokeArchive _field12;
    struct StrokeArchive _field13;
    struct StrokeArchive _field14;
    BOOL _field15;
    int _field16;
};

struct CellUIDListArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    RepeatedPtrField_c4607516 _field6;
    RepeatedField_f3b68cf6 _field7;
    RepeatedField_f3b68cf6 _field8;
};

struct CellUIDRegionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::UUIDRectArchive> _field5;
};

struct CellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct BooleanCellValueArchive _field5;
    struct DateCellValueArchive _field6;
    struct NumberCellValueArchive _field7;
    struct StringCellValueArchive _field8;
    struct ErrorCellValueArchive _field9;
    int _field10;
};

struct CharacterStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct CharacterStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct CharacterStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct Color _field9;
    struct Color _field10;
    struct ShadowArchive _field11;
    struct Color _field12;
    struct Color _field13;
    struct Color _field14;
    struct StrokeArchive _field15;
    struct FillArchive _field16;
    float _field17;
    BOOL _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    float _field26;
    float _field27;
    int _field28;
    BOOL _field29;
    BOOL _field30;
    BOOL _field31;
    BOOL _field32;
    float _field33;
    float _field34;
    float _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    BOOL _field39;
    float _field40;
    BOOL _field41;
    BOOL _field42;
    BOOL _field43;
    BOOL _field44;
    BOOL _field45;
    BOOL _field46;
    BOOL _field47;
    BOOL _field48;
    BOOL _field49;
    int _field50;
    struct CachedSize _field51;
};

struct CharacterStylePropertyChangeSetArchive;

struct Chart3DBaseImageTextureTilingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Chart3DVectorArchive _field5;
    float _field6;
};

struct Chart3DDiffuseMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    struct Chart3DTexturesMaterialArchive _field6;
};

struct Chart3DDirectionalLightArchive;

struct Chart3DEmissiveMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    struct Chart3DTexturesMaterialArchive _field6;
};

struct Chart3DEnvironmentMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> _field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
    struct Chart3DTexturesMaterialArchive _field7;
    BOOL _field8;
};

struct Chart3DEnvironmentPackageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> _field5;
};

struct Chart3DFillArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Chart3DLightingModelArchive _field6;
    int _field7;
    unsigned int _field8;
};

struct Chart3DFixedFunctionLightingModelArchive;

struct Chart3DImageTextureTilingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Chart3DBaseImageTextureTilingArchive _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    BOOL _field13;
};

struct Chart3DLightArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Chart3DVectorArchive _field6;
    struct Chart3DVectorArchive _field7;
    struct Chart3DVectorArchive _field8;
    struct Chart3DVectorArchive _field9;
    struct Chart3DPointLightArchive _field10;
    struct Chart3DDirectionalLightArchive _field11;
    struct Chart3DSpotLightArchive _field12;
    float _field13;
    unsigned int _field14;
    BOOL _field15;
};

struct Chart3DLightingModelArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Chart3DPhongLightingModelArchive _field5;
    struct Chart3DFixedFunctionLightingModelArchive _field6;
    struct Chart3DEnvironmentPackageArchive _field7;
};

struct Chart3DLightingPackageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DLightArchive> _field5;
    struct ArenaStringPtr _field6;
};

struct Chart3DModulateMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    struct Chart3DTexturesMaterialArchive _field6;
};

struct Chart3DPhongLightingModelArchive;

struct Chart3DPhongMaterialPackageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Chart3DEmissiveMaterialArchive _field5;
    struct Chart3DDiffuseMaterialArchive _field6;
    struct Chart3DModulateMaterialArchive _field7;
    struct Chart3DSpecularMaterialArchive _field8;
    struct Chart3DShininessMaterialArchive _field9;
};

struct Chart3DPointLightArchive;

struct Chart3DShininessMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    struct Chart3DTexturesMaterialArchive _field6;
};

struct Chart3DSpecularMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    struct Chart3DTexturesMaterialArchive _field6;
};

struct Chart3DSpotLightArchive;

struct Chart3DTSPImageDataTextureArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    struct DataReference _field7;
    struct DataReference _field8;
};

struct Chart3DTexturesMaterialArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> _field5;
    struct Chart3DVectorArchive _field6;
};

struct Chart3DVectorArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct ChartArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_54b3089c _field7;
    RepeatedPtrField_54b3089c _field8;
    RepeatedPtrField_54b3089c _field9;
    RepeatedPtrField_54b3089c _field10;
    RepeatedPtrField_54b3089c _field11;
    struct RectArchive _field12;
    struct Reference _field13;
    struct ChartGridArchive _field14;
    struct Reference _field15;
    struct Reference _field16;
    struct Reference _field17;
    struct Reference _field18;
    struct Reference _field19;
    struct SparseReferenceArray _field20;
    struct SparseReferenceArray _field21;
    struct Reference _field22;
    int _field23;
    int _field24;
    int _field25;
    BOOL _field26;
    BOOL _field27;
    BOOL _field28;
    unsigned int _field29;
};

struct ChartAxisGenericPropertyMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct ArenaStringPtr _field4;
    struct FormatStructArchive _field5;
    struct FormatStructArchive _field6;
    struct StrokeArchive _field7;
    struct FormatStructArchive _field8;
    struct FormatStructArchive _field9;
    struct ShadowArchive _field10;
    struct StrokeArchive _field11;
    struct ShadowArchive _field12;
    struct StrokeArchive _field13;
    struct FormatStructArchive _field14;
    struct ChartsNSNumberDoubleArchive _field15;
    struct ChartsNSNumberDoubleArchive _field16;
    float _field17;
    int _field18;
    int _field19;
    int _field20;
    float _field21;
    float _field22;
    float _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    BOOL _field29;
    BOOL _field30;
    BOOL _field31;
    BOOL _field32;
    BOOL _field33;
    BOOL _field34;
    BOOL _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    BOOL _field39;
    int _field40;
    int _field41;
    int _field42;
    struct CachedSize _field43;
};

struct ChartAxisIDArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    int _field5;
    unsigned int _field6;
};

struct ChartGenericPropertyMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct ArenaStringPtr _field4;
    struct Chart3DLightingPackageArchive _field5;
    struct Chart3DVectorArchive _field6;
    struct Chart3DVectorArchive _field7;
    struct Chart3DVectorArchive _field8;
    struct FillArchive _field9;
    struct StrokeArchive _field10;
    struct ShadowArchive _field11;
    struct StrokeArchive _field12;
    struct FillArchive _field13;
    struct Color _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    int _field23;
    float _field24;
    int _field25;
    int _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    int _field31;
    float _field32;
    float _field33;
    BOOL _field34;
    BOOL _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    int _field39;
    struct CachedSize _field40;
};

struct ChartGridArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_fe7cf120 _field5;
    RepeatedPtrField_fe7cf120 _field6;
    struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> _field7;
    int _field8;
    BOOL _field9;
};

struct ChartInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_54b3089c _field7;
    RepeatedPtrField_54b3089c _field8;
    RepeatedPtrField_54b3089c _field9;
    RepeatedPtrField_54b3089c _field10;
    struct DrawableArchive _field11;
    struct ChartModelArchive _field12;
    struct Reference _field13;
    struct LegendModelArchive _field14;
    struct RectArchive _field15;
    struct SparseReferenceArray _field16;
    struct SparseReferenceArray _field17;
    struct Reference _field18;
    struct Reference _field19;
    struct Point _field20;
    struct Reference _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    BOOL _field26;
};

struct ChartMediatorFormulaStorage {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field7;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field8;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field9;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field10;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field11;
    int _field12;
};

struct ChartModelArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_92283dc2 _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct ChartGridArchive _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartProjectedBoundsConverter {
    struct ChartProjectedBoundsSpaces _field1;
    float _field2;
    BOOL _field3;
    tvec2_84d5962d _field4;
};

struct ChartProjectedBoundsSpaces {
    box_80622335 mChart;
    box_80622335 mOrient;
    box_80622335 mDrawing;
    box_80622335 mLayout;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayout;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
};

struct ChartReferenceLineNonStyleItem {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct UUID _field6;
};

struct ChartSelectionPathArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> _field5;
    struct ChartSelectionPathTypeArchive _field6;
    struct ChartSelectionPathArchive _field7;
};

struct ChartSelectionPathTypeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
};

struct ChartSeriesGenericPropertyMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<3> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct FormatStructArchive _field6;
    struct FormatStructArchive _field7;
    struct LineEndArchive _field8;
    struct LineEndArchive _field9;
    struct StrokeArchive _field10;
    struct FormatStructArchive _field11;
    struct FormatStructArchive _field12;
    struct ChartsNSArrayOfNSNumberDoubleArchive _field13;
    struct ChartsNSArrayOfNSNumberDoubleArchive _field14;
    struct ChartsNSArrayOfNSNumberDoubleArchive _field15;
    struct ChartsNSArrayOfNSNumberDoubleArchive _field16;
    struct LineEndArchive _field17;
    struct LineEndArchive _field18;
    struct ShadowArchive _field19;
    struct StrokeArchive _field20;
    struct StrokeArchive _field21;
    struct FillArchive _field22;
    struct FormatStructArchive _field23;
    struct FormatStructArchive _field24;
    struct ShadowArchive _field25;
    struct StrokeArchive _field26;
    struct FillArchive _field27;
    struct StrokeArchive _field28;
    struct ShadowArchive _field29;
    struct StrokeArchive _field30;
    float _field31;
    float _field32;
    int _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    int _field38;
    int _field39;
    float _field40;
    float _field41;
    int _field42;
    int _field43;
    float _field44;
    int _field45;
    int _field46;
    int _field47;
    float _field48;
    int _field49;
    int _field50;
    BOOL _field51;
    BOOL _field52;
    BOOL _field53;
    BOOL _field54;
    BOOL _field55;
    BOOL _field56;
    BOOL _field57;
    BOOL _field58;
    int _field59;
    BOOL _field60;
    BOOL _field61;
    BOOL _field62;
    BOOL _field63;
    float _field64;
    int _field65;
    float _field66;
    float _field67;
    int _field68;
    int _field69;
    float _field70;
    float _field71;
    BOOL _field72;
    BOOL _field73;
    BOOL _field74;
    int _field75;
    float _field76;
    int _field77;
    float _field78;
    int _field79;
    int _field80;
    int _field81;
    float _field82;
    int _field83;
};

struct ChartUIState {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    struct Reference _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    BOOL _field12;
    BOOL _field13;
};

struct ChartsNSArrayOfNSNumberDoubleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedField<double> _field5;
};

struct ChartsNSNumberDoubleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    double _field5;
};

struct ChartsNumberFormatArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_fe7cf120 _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
    struct ArenaStringPtr _field10;
    struct IndexSet _field11;
    int _field12;
    unsigned int _field13;
    int _field14;
    int _field15;
    unsigned int _field16;
    unsigned int _field17;
    BOOL _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    unsigned int _field22;
    double _field23;
    BOOL _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
};

struct ClassicStylesheetRecordArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field5;
    struct Reference _field6;
};

struct ClassicThemeRecordArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ArenaStringPtr _field6;
    struct Reference _field7;
};

struct Collection;

struct ColorResult {
    BOOL _field1;
    struct Color {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
};

struct ColumnAggregateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    unsigned int _field6;
    int _field7;
};

struct ColumnAggregateListArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::ColumnAggregateArchive> _field5;
};

struct ColumnOrRowUuidsInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> _field5;
    struct UUID _field6;
    struct UUID _field7;
    struct UUID _field8;
    struct IndexedUidsArchive _field9;
    struct RangeCoordinateArchive _field10;
    struct UUID _field11;
    struct UUID _field12;
    BOOL _field13;
};

struct ColumnStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct ColumnStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct ColumnStylePropertiesArchive;

struct ColumnsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ColumnsArchive_EqualColumnsArchive _field5;
    struct ColumnsArchive_NonEqualColumnsArchive _field6;
};

struct ColumnsArchive_EqualColumnsArchive;

struct ColumnsArchive_NonEqualColumnsArchive;

struct CommentInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ShapeInfoArchive _field5;
    struct Reference _field6;
};

struct CommentStorageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ArenaStringPtr _field6;
    struct Date _field7;
    struct Reference _field8;
};

struct CompletionTokenAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct TokenAttachmentArchive _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ComponentExternalReferenceInfo {
    long long _field1;
    BOOL _field2;
    BOOL _field3;
};

struct ComponentInfo {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_92283dc2 _field5;
    int _field6;
    RepeatedField_92283dc2 _field7;
    int _field8;
    RepeatedPtrField_5bff772f _field9;
    struct RepeatedPtrField<TSP::ComponentDataReference> _field10;
    RepeatedPtrField_f8410f9e _field11;
    struct RepeatedPtrField<TSP::FeatureInfo> _field12;
    RepeatedField_92283dc2 _field13;
    int _field14;
    RepeatedField_92283dc2 _field15;
    int _field16;
    RepeatedPtrField_5bff772f _field17;
    struct ArenaStringPtr _field18;
    struct ArenaStringPtr _field19;
    NSUInteger _field20;
    NSUInteger _field21;
    BOOL _field22;
    BOOL _field23;
    unsigned int _field24;
};

struct ConnectionLineArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ShapeArchive _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct UUID _field8;
    struct UUID _field9;
};

struct ConnectionLinePathSourceArchive;

struct ContactShadowArchive;

struct ContainerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct GeometryArchive _field6;
    struct Reference _field7;
};

struct CoordMapperArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::CoordMapperArchive_BaseToViewEntry> _field5;
    struct IndexSetArchive _field6;
    struct UUID _field7;
};

struct CopyingFileOutputStream {
    /* void * CDUnknownFunctionPointerType _field1 */;
    int _field2;
    BOOL _field3;
    BOOL _field4;
    int _field5;
};

struct CopyingOutputStream;

struct CopyingOutputStreamAdaptor {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct CopyingOutputStream _field2;
    BOOL _field3;
    BOOL _field4;
    long long _field5;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field6;
    int _field7;
    int _field8;
};

struct CurvedShadowArchive;

struct CustomFormatArchive;

struct DEPRECATEDChart3DFillArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct FillArchive _field6;
    struct Chart3DLightingModelArchive _field7;
    int _field8;
    unsigned int _field9;
};

struct Data {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
};

struct DataAttributes {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 mSize;
    NSUInteger mComponents;
    BOOL mHasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced mSize;
    NSUInteger mComponents;
};

struct DataBufferInfo {
    int componentType;
    NSUInteger components;
    NSUInteger count;
    NSUInteger byteSize;
    NSUInteger componentByteSize;
    NSUInteger elementByteSize;
};

struct DataBufferLevelData {
    void _field1;
    tvec3_c2818ced _field2;
};

struct DataInfo {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
    struct ArenaStringPtr _field10;
    struct ArenaStringPtr _field11;
    struct DataAttributes _field12;
    struct EncryptionInfo _field13;
    NSUInteger _field14;
    BOOL _field15;
    int _field16;
};

struct DataMetadata {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Color _field5;
};

struct DataMetadataMap {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> _field5;
};

struct DataReference {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    NSUInteger _field5;
};

struct DataStore {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct HeaderStorage _field5;
    struct Reference _field6;
    struct TileStorage _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct TableRBTree _field11;
    struct TableRBTree _field12;
    struct Reference _field13;
    struct Reference _field14;
    struct Reference _field15;
    struct Reference _field16;
    struct Reference _field17;
    struct Reference _field18;
    struct Reference _field19;
    struct Reference _field20;
    struct Reference _field21;
    struct Reference _field22;
    struct Reference _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
};

struct DatabaseDataArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Reference _field7;
    NSUInteger _field8;
    unsigned int _field9;
    BOOL _field10;
};

struct Date {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    double _field5;
};

struct DateCellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FormatStructArchive _field5;
    double _field6;
    BOOL _field7;
    BOOL _field8;
};

struct DateNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ExpressionNodeArchive _field7;
};

struct DeathhawkRdar39989167CellSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct CellUIDRegionArchive _field6;
    struct CellUIDRegionArchive _field7;
    struct UUIDCoordArchive _field8;
    struct UUIDCoordArchive _field9;
    int _field10;
};

struct Deprecated_StrokePresetDataArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Deprecated_TableStrokeArchive _field5;
    struct Deprecated_TableStrokeArchive _field6;
    struct Deprecated_TableStrokeArchive _field7;
    int _field8;
};

struct Deprecated_TableStrokeArchive;

struct DepthState {
    BOOL depthTest;
    BOOL depthMask;
};

struct Descriptor {
    basic_string_23d93216 _field1;
    basic_string_23d93216 _field2;
    struct FileDescriptor _field3;
    struct Descriptor _field4;
    struct MessageOptions _field5;
    struct FieldDescriptor _field6;
    struct OneofDescriptor _field7;
    struct Descriptor _field8;
    struct EnumDescriptor _field9;
    struct ExtensionRange _field10;
    struct FieldDescriptor _field11;
    struct ReservedRange _field12;
    basic_string_23d93216 _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    BOOL _field22;
    BOOL _field23;
};

struct DesktopUILayoutArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    int _field5;
    BOOL _field6;
    BOOL _field7;
    BOOL _field8;
    BOOL _field9;
    int _field10;
    BOOL _field11;
    BOOL _field12;
    BOOL _field13;
};

struct Dictionary {
    struct IdentifierMap _field1;
    struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> _field2;
    struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> _field3;
    struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> _field4;
};

struct DispatchDataInputStream {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    id _field5;
    NSUInteger _field6;
    char _field7;
};

struct DocumentRevision;

struct DoublePoint;

struct DoubleSize;

struct DrawableArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct GeometryArchive _field8;
    struct Reference _field9;
    struct ExteriorTextWrapArchive _field10;
    struct Reference _field11;
    BOOL _field12;
    BOOL _field13;
};

struct DrawableAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    unsigned int _field6;
    float _field7;
    unsigned int _field8;
    float _field9;
};

struct DrawableSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
};

struct DropShadowArchive;

struct DurationNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    double _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>>;

struct EQKitCacheLRUCounter {
    NSUInteger _field1;
};

struct EQKitLayoutContext {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct Info _field2;
    double _field3;
    double _field4;
    double _field5;
    id _field6;
    double _field7;
    struct Collection _field8;
    struct __CTFont _field9;
    CGColorRef_field10;
    CDStruct_6196388c _field11;
    CDStruct_d6fcdff4 _field12;
};

struct EQKitLayoutElementaryStack;

struct EQKitLayoutManager {
    id _field1;
    double _field2;
    CGSize _field3;
    struct __CFString _field4;
    struct Manager _field5;
    struct Config _field6;
    struct EQKitLayoutContext _field7;
    struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> _field8;
    struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> _field9;
    struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> _field10;
    struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> _field11;
    struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field12;
    struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> _field13;
    struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> _field14;
    struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> _field15;
    struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> _field16;
    id _field17;
    struct AttributeCollection _field18;
};

struct EQKitLayoutRow;

struct EQKitLayoutStretchedOperator;

struct EQKitLayoutTable;

struct EdgeDetectionParameters {
    BOOL detectSilhouetteEdges;
    BOOL detectSharpEdges;
    float sharpEdgeThreshold;
};

struct EdgeInsetsArchive;

struct EditableBezierPathSourceArchive;

struct ElementRenderPass {
    int _field1;
};

struct EmptyExpressionNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
};

struct EnableClipDistances {
    struct array<bool, 8> states;
};

struct EncryptionInfo;

struct Entry;

struct EnumDescriptor;

struct EnumValueDescriptor;

struct ErrorCellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    double _field6;
    int _field7;
    int _field8;
};

struct ExpandCollapseStateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    RepeatedPtrField_c4607516 _field6;
};

struct ExpandedTrackedReferenceArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ASTNodeArrayArchive _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct ExpressionNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    NSUInteger _field6;
    NSUInteger _field7;
};

struct ExtensionRange;

struct ExtensionSet {
    struct Arena _field1;
    unsigned short _field2;
    unsigned short _field3;
    union AllocatedData _field4;
};

struct ExteriorTextWrapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    BOOL _field10;
};

struct ExternalReferenceCompletionInfo;

struct ExternalReferenceInfo {
    long long _field1;
    struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> _field2;
};

struct FieldDescriptor {
    basic_string_23d93216 _field1;
    basic_string_23d93216 _field2;
    basic_string_23d93216 _field3;
    basic_string_23d93216 _field4;
    basic_string_23d93216 _field5;
    struct FileDescriptor _field6;
    struct GoogleOnceDynamic _field7;
    int _field8;
    int _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    int _field13;
    int _field14;
    struct Descriptor _field15;
    struct OneofDescriptor _field16;
    struct Descriptor _field17;
    struct Descriptor _field18;
    struct EnumDescriptor _field19;
    struct FieldOptions _field20;
    basic_string_23d93216 _field21;
    basic_string_23d93216 _field22;
    union {
        int _field1;
        long long _field2;
        unsigned int _field3;
        NSUInteger _field4;
        float _field5;
        double _field6;
        BOOL _field7;
        struct EnumValueDescriptor _field8;
        basic_string_23d93216 _field9;
    } _field23;
};

struct FieldInfo {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    RepeatedField_d2055372 object_references_;
    int _object_references_cached_byte_size_;
    RepeatedField_d2055372 data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_92283dc2 known_field_version_;
    int _known_field_version_cached_byte_size_;
    struct ArenaStringPtr known_field_feature_identifier_;
    struct FieldPath path_;
    int type_;
    int unknown_field_rule_;
    int known_field_rule_;
};

struct FieldOptions;

struct FieldPath {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_92283dc2 _field5;
    int _field6;
};

struct FileDescriptor;

struct FileOutputStream {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct CopyingFileOutputStream _field2;
    struct CopyingOutputStreamAdaptor _field3;
};

struct FillArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    struct Color _field6;
    struct GradientArchive _field7;
    struct ImageFillArchive _field8;
};

struct FilterRuleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FormulaPredicateArchive _field5;
    BOOL _field6;
};

struct FilterSetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::FilterRuleArchive> _field5;
    RepeatedField_92283dc2 _field6;
    RepeatedField_11b8965c _field7;
    int _field8;
    BOOL _field9;
    BOOL _field10;
};

struct FinalizeHandlerItem {
    vector_3c415888 _field1;
    long long _field2;
    struct vector<long long, std::__1::allocator<long long>> _field3;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
};

struct FindLinesContext {
    BOOL _field1;
    CGPoint _field2;
    CGPoint _field3;
    struct __CFArray _field4;
    BOOL _field5;
    int _field6;
};

struct FlowInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct Reference _field6;
    unsigned int _field7;
};

struct FlowInfoContainerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    unsigned int _field6;
};

struct FlushResult {
    BOOL _field1;
    BOOL _field2;
};

struct FormatStructArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<2> _field4;
    RepeatedPtrField_fe7cf120 _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
    struct ArenaStringPtr _field10;
    struct IndexSet _field11;
    struct UUID _field12;
    struct CustomFormatArchive _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    double _field27;
    unsigned int _field28;
    unsigned int _field29;
    double _field30;
    double _field31;
    double _field32;
    unsigned int _field33;
    unsigned int _field34;
    BOOL _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    BOOL _field48;
    BOOL _field49;
    struct CachedSize _field50;
};

struct FormulaArchive;

struct FormulaEqualsTokenAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    UIGraphicalAttachment _field5;
};

struct FormulaPredicateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FormulaArchive _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct FormulaRewriteSpecArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct UUID _field6;
    struct UUID _field7;
    struct ColumnOrRowUuidsInfoArchive _field8;
    struct ColumnOrRowUuidsInfoArchive _field9;
    struct RegionMovedInfoArchive _field10;
    struct RegionInfoArchive _field11;
    struct RewriteTableUIDInfoArchive _field12;
    struct TableTransposeInfoArchive _field13;
    struct MergeOriginMovedArchive _field14;
    struct MergeSourceArchive _field15;
    struct RewriteGroupNodeUIDInfoArchive _field16;
    struct GroupByChangeArchive _field17;
    BOOL _field18;
    int _field19;
};

struct FormulaStoreArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> _field5;
    unsigned int _field6;
};

struct FormulasForUndoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::FormulaCoordPairsByOwnerArchive> _field5;
};

struct FrameArchive;

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    BOOL linearFilter;
    BOOL discardHint;
    BOOL useIOSurfaceBacking;
};

struct FreehandDrawingToolkitUIState {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Color _field5;
    struct Color _field6;
    struct Color _field7;
    struct Color _field8;
    struct Color _field9;
    int _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    BOOL _field19;
};

struct FunctionEndNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
};

struct FunctionNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ExpressionNodeArchive _field6;
    unsigned int _field7;
};

struct FunctorArchive;

struct GQHPathEndPointInfo {
    BOOL _field1;
    CGPoint _field2;
    CGPoint _field3;
    CGPoint _field4;
    CGPoint _field5;
    int _field6;
};

struct GQZEndOfCentralDirectory {
    NSUInteger _field1;
    long long _field2;
    long long _field3;
};

struct GalleryItem {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Point _field6;
    struct DataReference _field7;
    struct DataReference _field8;
    struct ImageAdjustmentsArchive _field9;
    struct DataReference _field10;
    struct DataReference _field11;
    struct Reference _field12;
    float _field13;
};

struct GeometryArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Point _field5;
    struct Size _field6;
    unsigned int _field7;
    float _field8;
};

struct GoogleOnceDynamic;

struct GradientArchive;

struct GradientArchive_GradientStop {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Color _field5;
    float _field6;
    float _field7;
};

struct GridRow {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::GridValue> _field5;
};

struct GridValue {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct GroupArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    RepeatedPtrField_54b3089c _field6;
    struct DrawableArchive _field7;
    struct Reference _field8;
};

struct GroupByChangeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    struct RepeatedPtrField<TSCE::GroupByChangeArchive_GroupingColumnChangeArchive> _field6;
    struct UUID _field7;
    struct UUIDMapArchive _field8;
    struct UUIDMapArchive _field9;
    int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct GroupByNodeMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::GroupByNodeMapArchive_GroupNodesForGroupBy> _field5;
};

struct GroupColumnArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct FunctorArchive _field6;
    struct UUID _field7;
    int _field8;
};

struct GroupColumnListArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::GroupColumnArchive> _field5;
};

struct HasBits<1> {
    unsigned int has_bits_[1];
};

struct HasBits<2> {
    unsigned int _field1[2];
};

struct HasBits<3> {
    unsigned int _field1[3];
};

struct HeaderStorage {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    unsigned int _field6;
};

struct HeaderStorageBucket_Header {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    unsigned int _field7;
    float _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct HiddenStateExtentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::HiddenStateExtentArchive_RowOrColumnState> _field5;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field6;
    RepeatedPtrField_c4607516 _field7;
    struct UUID _field8;
    int _field9;
    BOOL _field10;
};

struct HiddenStatesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct HiddenStateExtentArchive _field6;
    struct HiddenStateExtentArchive _field7;
};

struct HiddenStatesOwnerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::HiddenStatesArchive> _field5;
    struct UUID _field6;
};

struct HighlightArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Reference _field6;
};

struct HyperlinkFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct SmartFieldArchive _field6;
};

struct IdentifierMap {
    unsigned short _field1;
    struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
};

struct IdentifierNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ExpressionNodeArchive _field6;
    unsigned int _field7;
};

struct ImageAdjustmentsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    BOOL _field16;
    BOOL _field17;
    float _field18;
};

struct ImageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    struct DrawableArchive _field6;
    struct Reference _field7;
    struct Reference _field8;
    struct Size _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    struct Size _field13;
    struct Path _field14;
    struct DataReference _field15;
    struct DataReference _field16;
    struct DataReference _field17;
    struct ImageAdjustmentsArchive _field18;
    struct DataReference _field19;
    struct DataReference _field20;
    struct DataReference _field21;
    struct Path _field22;
    struct Attribution _field23;
    unsigned int _field24;
    BOOL _field25;
};

struct ImageFillArchive;

struct ImportWarningSetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ImportWarningSetArchive_FormulaImportWarning _field6;
    BOOL _field7;
    BOOL _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
    BOOL _field18;
    BOOL _field19;
    BOOL _field20;
};

struct ImportWarningSetArchive_FormulaImportWarning;

struct ImportWarningSetByCellRefArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CellRefImportWarningSetPairArchive> _field5;
};

struct InNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
};

struct IndexSet {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_6e0d89e6 _field5;
};

struct IndexSetArchive;

struct IndexedUidsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> _field5;
};

struct Info {
    NSUInteger _field1;
    BOOL _field2;
    BOOL _field3;
    BOOL _field4;
    int _field5;
    double _field6;
    int _field7;
    struct __CFString _field8;
};

struct InternalMetadataWithArena {
    void ptr_;
};

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct KeyValue;

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    BOOL _field5;
};

struct LargeArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_6e0d89e6 _field5;
    RepeatedPtrField_54b3089c _field6;
    NSUInteger _field7;
    NSUInteger _field8;
    unsigned int _field9;
    BOOL _field10;
    BOOL _field11;
    NSUInteger _field12;
};

struct LargeArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    BOOL _field6;
    unsigned int _field7;
};

struct LargeDictionary {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_6e0d89e6 _field5;
    RepeatedPtrField_54b3089c _field6;
    NSUInteger _field7;
    NSUInteger _field8;
    NSUInteger _field9;
    unsigned int _field10;
    BOOL _field11;
    BOOL _field12;
};

struct LargeDictionarySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    BOOL _field6;
    unsigned int _field7;
};

struct LargeLazyObjectArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeArray _field5;
};

struct LargeLazyObjectArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct LargeArraySegment _field6;
};

struct LargeNumberArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeArray _field5;
};

struct LargeNumberArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedField<double> _field5;
    struct LargeArraySegment _field6;
};

struct LargeObjectArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeArray _field5;
};

struct LargeObjectArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct LargeArraySegment _field6;
};

struct LargeStringArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeArray _field5;
};

struct LargeStringArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> _field5;
    struct LargeArraySegment _field6;
};

struct LargeStringToObjectDictionary {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeDictionary _field5;
};

struct LargeStringToObjectDictionarySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> _field5;
    struct LargeDictionarySegment _field6;
};

struct LargeUUIDArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct LargeArray _field5;
};

struct LargeUUIDArraySegment {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    struct LargeArraySegment _field6;
};

struct LayoutHintArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct CellRange _field5;
    struct CellID _field6;
    struct Size _field7;
    struct Size _field8;
    BOOL _field9;
    BOOL _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct LayoutStateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TP::SectionHintArchive> _field5;
    RepeatedPtrField_fe7cf120 _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    int _field12;
};

struct LegendGenericPropertyMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FillArchive _field5;
    struct ShadowArchive _field6;
    struct StrokeArchive _field7;
    int _field8;
    float _field9;
};

struct LegendModelArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct RectArchive _field6;
    struct Reference _field7;
    struct Reference _field8;
};

struct LetNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ExpressionNodeArchive _field9;
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct LineEndArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Path _field6;
    struct Point _field7;
    int _field8;
    BOOL _field9;
};

struct LineExtrusionGeometryXRangeInfo {
    tvec2_84d5962d _field1;
    BOOL _field2;
};

struct LineSpacingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    int _field5;
    float _field6;
    float _field7;
};

struct ListNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
};

struct ListStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_f3b68cf6 _field5;
    RepeatedField_75407ea4 _field6;
    RepeatedField_75407ea4 _field7;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field8;
    RepeatedField_f3b68cf6 _field9;
    RepeatedPtrField_fe7cf120 _field10;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field11;
    RepeatedField_11b8965c _field12;
    struct ArenaStringPtr _field13;
    struct StyleArchive _field14;
    struct ShadowArchive _field15;
    struct Color _field16;
    unsigned int _field17;
    BOOL _field18;
    BOOL _field19;
    BOOL _field20;
    int _field21;
};

struct Lookup<TSCH3D::AttributeSpecs>;

struct Lookup<TSCH3D::TextureAttributes>;

struct MaskArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct DrawableArchive _field5;
    struct PathSourceArchive _field6;
};

struct MediaStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct MediaStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct MediaStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StrokeArchive _field5;
    struct ShadowArchive _field6;
    struct ReflectionArchive _field7;
    float _field8;
};

struct MergeOperationArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::UUIDRectArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    RepeatedField_92283dc2 _field7;
    int _field8;
};

struct MergeOriginMovedArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_92283dc2 _field5;
    RepeatedField_92283dc2 _field6;
    RepeatedField_92283dc2 _field7;
    RepeatedField_92283dc2 _field8;
};

struct MergeOwnerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct CFUUIDArchive _field5;
    struct FormulaStoreArchive _field6;
};

struct MergeSourceArchive;

struct Message {
    /* void * CDUnknownFunctionPointerType _field1 */;
};

struct MessageInfo {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    RepeatedField_92283dc2 version_;
    int _version_cached_byte_size_;
    struct RepeatedPtrField<TSP::FieldInfo> field_infos_;
    RepeatedField_d2055372 object_references_;
    int _object_references_cached_byte_size_;
    RepeatedField_d2055372 data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_92283dc2 diff_merge_version_;
    int _diff_merge_version_cached_byte_size_;
    RepeatedPtrField_02f83fb8 fields_to_remove_;
    RepeatedField_92283dc2 diff_read_version_;
    int _diff_read_version_cached_byte_size_;
    struct FieldPath diff_field_path_;
    unsigned int type_;
    unsigned int length_;
    unsigned int base_message_index_;
};

struct MessageOptions;

struct MovieArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct DrawableArchive _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct DataReference _field11;
    struct DataReference _field12;
    struct DataReference _field13;
    struct Reference _field14;
    struct Size _field15;
    struct Size _field16;
    struct DataReference _field17;
    struct Attribution _field18;
    float _field19;
    float _field20;
    float _field21;
    unsigned int _field22;
    float _field23;
    unsigned int _field24;
    unsigned int _field25;
    BOOL _field26;
    BOOL _field27;
    BOOL _field28;
    BOOL _field29;
    BOOL _field30;
    int _field31;
};

struct MovieSegmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct DataReference _field6;
    double _field7;
};

struct NativeContentDescription {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
};

struct Node;

struct NoteArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
};

struct NumberCellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct FormatStructArchive _field6;
    double _field7;
    int _field8;
    BOOL _field9;
    BOOL _field10;
    NSUInteger _field11;
    NSUInteger _field12;
};

struct NumberNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    double _field6;
    NSUInteger _field7;
    NSUInteger _field8;
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjectBounds {
    box_a3bd9649 mBounds;
    box_a3bd9649 mProjected;
    box_a3bd9649 m2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> mBoxes;
};

struct ObjectInfo {
    struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> _field1;
};

struct ObjectLocation {
    long long _field1;
    long long _field2;
};

struct ObjectSerializationDirectory {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> entries_;
};

struct ObjectSerializationMetadata {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    RepeatedField_92283dc2 version_;
    int _version_cached_byte_size_;
    RepeatedPtrField_6277dbb5 datas_;
    RepeatedPtrField_f8410f9e external_object_uuid_map_entries_;
    struct UUID source_document_uuid_;
    struct UUID version_uuid_;
    struct ComponentInfo component_;
    struct Reference data_metadata_map_;
};

struct ObjectStackEntry;

struct ObjectState {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> mAttributes;
    struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> mTextures;
};

struct ObjectStateIdentifier {
    BOOL _field1;
    long long _field2;
    BOOL _field3;
    id _field4;
};

struct ObjectStateMatchObject {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> mAttributes;
    struct vector<TSCH3D::TextureAttributeState, std::__1::allocator<TSCH3D::TextureAttributeState>> mTextures;
};

struct ObjectTransforms {
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field1;
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field2;
};

struct OneofDescriptor;

struct Operation {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_d2055372 _field5;
    int _field6;
    RepeatedField_92283dc2 _field7;
    int _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
    unsigned int _field12;
    int _field13;
    int _field14;
    NSUInteger _field15;
    int _field16;
    unsigned int _field17;
    int _field18;
    int _field19;
};

struct OperatorNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ExpressionNodeArchive _field5;
    unsigned int _field6;
};

struct OwnerUIDMapperArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct UUID _field6;
    struct UUID _field7;
    struct UUID _field8;
    struct UUID _field9;
    struct UUID _field10;
    struct UUID _field11;
    struct UUID _field12;
    struct UUID _field13;
    struct UUID _field14;
    struct UUID _field15;
    struct UUID _field16;
    struct UUID _field17;
    struct UUID _field18;
    struct UUID _field19;
    struct UUID _field20;
    struct UUID _field21;
    struct UUID _field22;
    struct UUID _field23;
    struct UUID _field24;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    CGPoint _field1;
};

struct PODType<unsigned char>;

struct PODType<unsigned short>;

struct PackageMetadata {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    struct RepeatedPtrField<TSP::ComponentInfo> components_;
    RepeatedPtrField_6277dbb5 datas_;
    RepeatedField_92283dc2 read_version_;
    int _read_version_cached_byte_size_;
    RepeatedField_92283dc2 write_version_;
    int _write_version_cached_byte_size_;
    RepeatedField_92283dc2 file_format_version_;
    int _file_format_version_cached_byte_size_;
    struct RepeatedPtrField<TSP::ComponentInfo> versioned_components_;
    struct DocumentRevision revision_;
    struct Reference data_metadata_map_;
    NSUInteger last_object_identifier_;
    NSUInteger save_token_;
    int preferred_package_type_;
};

struct PaddingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct PageHintArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TP::TargetHintArchive> _field5;
    struct RepeatedPtrField<TP::AnchorPosArchive> _field6;
    RepeatedPtrField_54b3089c _field7;
    RepeatedPtrField_c4607516 _field8;
    RepeatedPtrField_54b3089c _field9;
    struct RepeatedPtrField<TP::TargetHintArchive> _field10;
    struct RepeatedPtrField<TP::TopicNumberHintsArchive> _field11;
    struct Range _field12;
    struct Range _field13;
    struct Reference _field14;
    struct Reference _field15;
    struct TopicNumberHintsArchive _field16;
    int _field17;
    unsigned int _field18;
    unsigned int _field19;
    int _field20;
    unsigned int _field21;
    unsigned int _field22;
};

struct ParagraphStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct CharacterStylePropertiesArchive _field6;
    struct ParagraphStylePropertiesArchive _field7;
    unsigned int _field8;
};

struct ParagraphStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct ArenaStringPtr _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Color _field7;
    struct LineSpacingArchive _field8;
    struct Point _field9;
    struct TabsArchive _field10;
    struct StrokeArchive _field11;
    struct Reference _field12;
    struct Reference _field13;
    int _field14;
    float _field15;
    BOOL _field16;
    BOOL _field17;
    BOOL _field18;
    BOOL _field19;
    float _field20;
    float _field21;
    BOOL _field22;
    BOOL _field23;
    BOOL _field24;
    BOOL _field25;
    int _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    unsigned int _field31;
    BOOL _field32;
    BOOL _field33;
    BOOL _field34;
    BOOL _field35;
    int _field36;
    BOOL _field37;
    BOOL _field38;
    BOOL _field39;
    BOOL _field40;
    BOOL _field41;
    BOOL _field42;
    int _field43;
    struct CachedSize _field44;
};

struct ParagraphStylePropertyChangeSetArchive;

struct PasteboardMetadata {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    RepeatedField_92283dc2 version_;
    int _version_cached_byte_size_;
    RepeatedPtrField_6277dbb5 datas_;
    struct ArenaStringPtr app_name_;
    struct UUID source_document_uuid_;
    struct Reference data_metadata_map_;
};

struct PathSourceArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct PointPathSourceArchive _field7;
    struct ScalarPathSourceArchive _field8;
    struct BezierPathSourceArchive _field9;
    struct CalloutPathSourceArchive _field10;
    struct ConnectionLinePathSourceArchive _field11;
    struct EditableBezierPathSourceArchive _field12;
    BOOL _field13;
    BOOL _field14;
};

struct PatternedStrokeArchive;

struct PencilAnnotationOwnerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct CFUUIDArchive _field6;
    struct FormulaStoreArchive _field7;
};

struct PencilAnnotationSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
};

struct PencilAnnotationStorageArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    struct Point _field7;
    struct DataReference _field8;
    struct DataReference _field9;
    struct Path _field10;
    struct Point _field11;
    struct Size _field12;
    struct Size _field13;
    struct Color _field14;
    struct Date _field15;
    struct DataReference _field16;
    struct Point _field17;
    struct Size _field18;
    struct Point _field19;
    struct Size _field20;
    int _field21;
    int _field22;
    double _field23;
    NSUInteger _field24;
    NSUInteger _field25;
    int _field26;
    int _field27;
    double _field28;
};

struct PlaceholderArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ShapeInfoArchive _field5;
    int _field6;
};

struct PlaceholderSmartFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct SmartFieldArchive _field6;
    BOOL _field7;
};

struct Point {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
    float _field6;
};

struct PointPathSourceArchive;

struct PopUpMenuModel {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> _field5;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field6;
};

struct PostfixOperatorNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct OperatorNodeArchive _field5;
};

struct PrefilteredLineVertexProperties {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tvec4_ac57c72d _field3;
    int _field4;
    box_80622335 _field5;
};

struct PrefixOperatorNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct OperatorNodeArchive _field5;
};

struct PropertyValueStorageContainerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<1> _field4;
    struct CachedSize _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct SparseReferenceArray _field10;
    struct SparseReferenceArray _field11;
    struct SparseReferenceArray _field12;
    struct SparseReferenceArray _field13;
    struct SparseReferenceArray _field14;
    struct SparseReferenceArray _field15;
    struct SparseReferenceArray _field16;
    struct SparseReferenceArray _field17;
};

struct PrototypeForUndoMasterChangeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_fe7cf120 _field7;
    struct Reference _field8;
    struct UUID _field9;
};

struct QuantizationConfig {
    NSUInteger _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct RTree<unsigned int, 2, double, 8, 4> {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct Node _field2;
    double _field3;
};

struct Range;

struct RangeCoordinateArchive;

struct RangeReferenceArchive;

struct RecordingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct Reference _field6;
    struct Date _field7;
    struct RecordingSyncState _field8;
    struct RecordingCorrectionHistory _field9;
    double _field10;
    int _field11;
};

struct RecordingCorrectionHistory {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    BOOL _field5;
};

struct RecordingEventArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RecordingNavigationEventArchive _field5;
    struct RecordingLaserEventArchive _field6;
    struct RecordingPauseEventArchive _field7;
    struct RecordingMovieEventArchive _field8;
    double _field9;
};

struct RecordingEventTrackArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<KN::RecordingEventArchive> _field5;
    struct ArenaStringPtr _field6;
};

struct RecordingLaserEventArchive;

struct RecordingMovieEventArchive;

struct RecordingMovieTrackArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<KN::MovieSegmentArchive> _field5;
    BOOL _field6;
};

struct RecordingNavigationEventArchive;

struct RecordingPauseEventArchive;

struct RecordingSyncState {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    BOOL _field6;
};

struct RectArchive;

struct RefTypeHolder<TSCECellRef, 0> {
    struct TSCECellRef _ref;
};

struct RefTypeHolder<TSCECellRef, 1> {
    struct TSCECellRef _field1;
};

struct RefTypeHolder<TSCECellRef, 2> {
    struct TSCECellRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 0> {
    struct TSCERangeRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 1> {
    struct TSCERangeRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 2> {
    struct TSCERangeRef _ref;
};

struct Reference {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    NSUInteger _field5;
    int _field6;
    BOOL _field7;
};

struct ReferenceCompletionInfo;

struct ReferenceLineGenericPropertyMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ChartsNSNumberDoubleArchive _field6;
    struct ShadowArchive _field7;
    struct StrokeArchive _field8;
    int _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    int _field13;
    int _field14;
};

struct ReferenceNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ExpressionNodeArchive _field6;
    struct RangeReferenceArchive _field7;
    struct UUID _field8;
    struct UUIDCoordArchive _field9;
    struct UUIDCoordArchive _field10;
    struct CategoryReferenceArchive _field11;
    struct UUIDRectArchive _field12;
    struct CellReferenceArchive _field13;
    unsigned int _field14;
};

struct ReferencePrinter {
    int _field1;
    BOOL _field2;
    BOOL _field3;
    BOOL _field4;
    BOOL _field5;
    BOOL _field6;
    id /* CDUnknownBlockType */ _field7;
    id /* CDUnknownBlockType */ _field8;
    id /* CDUnknownBlockType */ _field9;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> _field10;
    struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> _field11;
};

struct Reflection {
    /* void * CDUnknownFunctionPointerType _field1 */;
};

struct ReflectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
};

struct RegionInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct IndexedUidsArchive _field6;
    struct IndexedUidsArchive _field7;
};

struct RegionMovedInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RegionInfoArchive _field5;
    struct RegionInfoArchive _field6;
    struct RegionInfoArchive _field7;
    struct UUID _field8;
    BOOL _field9;
    BOOL _field10;
};

struct RemoteDataSpecifierArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    unsigned int _field6;
    unsigned int _field7;
    double _field8;
};

struct RemoteDataValueMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> _field5;
};

struct RenderHints {
    struct TextureSizeHint _field1;
};

struct RenderState {
    struct BlendState blendState;
    struct DepthState depthState;
    BOOL culling;
    BOOL cullBack;
    BOOL polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct Rep;

struct RepeatedExternalReferenceCompletionInfo;

struct RepeatedField<bool> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedField<double> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedField<float> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedField<int> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedField<long long> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
};

struct RepeatedField<std::__1::basic_string<char>> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
};

struct RepeatedField<unsigned int> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
};

struct RepeatedField<unsigned long long> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
};

struct RepeatedPtrField<KN::BuildChunkArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::MovieSegmentArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::RecordingEventArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::SlideNodeArchive_SlideSpecificHyperlinkMapEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<KN::ThemeCustomTimingCurveArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::AnchorPosArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::PageHintArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::SectionHintArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::TargetHintArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::TopicNumberEntryArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TP::TopicNumberHintsArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::CellValueArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::CoordMapperArchive_BaseToViewEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::FormulaArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::FormulaCoordPairsByOwnerArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::GroupByChangeArchive_GroupingColumnChangeArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::GroupByNodeMapArchive_GroupNodesForGroupBy> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::RewriteTableUIDInfoArchive_TableUIDMapEntryArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::Chart3DLightArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::ChartUIState> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::GridRow> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::GridValue> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSD::GeometryArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSD::GuideArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSK::FormatStructArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::Color> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::ComponentDataReference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::ComponentExternalReference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::ComponentInfo> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::DataInfo> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::DataReference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::FeatureInfo> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::FieldInfo> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::FieldPath> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::MessageInfo> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
};

struct RepeatedPtrField<TSP::Path_Element> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::Range> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::Reference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::Size> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::UUID> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::UUIDPath> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSP::UUIDRectArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggNodeArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggregatorArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CellRange> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::CellRefImportWarningSetPairArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::ColumnAggregateArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::FilterRuleArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::GroupColumnArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::HiddenStateExtentArchive_RowOrColumnState> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::HiddenStatesArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::StrokePresetDataArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::SummaryCellVendorArchive_SummaryCellEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::TableDataList_ListEntry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::TableRBTree_Node> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TST::TileStorage_Tile> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::FontFeatureArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::TabArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
};

struct ReservedRange;

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct RewriteGroupNodeUIDInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct UUID _field5;
    struct UUIDMapArchive _field6;
};

struct RewriteRangeEntryArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct RewriteTableUIDInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::RewriteTableUIDInfoArchive_TableUIDMapEntryArchive> _field5;
};

struct RubyFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct SmartFieldArchive _field6;
};

struct SFUZipEndOfCentralDirectory {
    NSUInteger _field1;
    long long _field2;
    long long _field3;
};

struct ScalarPathSourceArchive;

struct Schemata {
    /* void * CDUnknownFunctionPointerType _field1 */;
    int _field2;
    id _field3;
    id _field4;
};

struct SectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_54b3089c _field7;
    struct ArenaStringPtr _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    struct FillArchive _field13;
    struct UUID _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    unsigned int _field29;
    unsigned int _field30;
    BOOL _field31;
    BOOL _field32;
    BOOL _field33;
    unsigned int _field34;
};

struct SectionHintArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TP::PageHintArchive> _field5;
    unsigned int _field6;
};

struct SelectionPathArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
};

struct ShadowArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Color _field5;
    struct DropShadowArchive _field6;
    struct ContactShadowArchive _field7;
    struct CurvedShadowArchive _field8;
    int _field9;
    BOOL _field10;
    float _field11;
    float _field12;
    int _field13;
    float _field14;
};

struct ShapeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct DrawableArchive _field5;
    struct Reference _field6;
    struct PathSourceArchive _field7;
    struct LineEndArchive _field8;
    struct LineEndArchive _field9;
    float _field10;
};

struct ShapeInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ShapeArchive _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct Reference _field8;
    BOOL _field9;
};

struct ShapeStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ShapeStyleArchive _field5;
    struct ShapeStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct ShapeStylePropertyChangeSetArchive;

struct SheetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_54b3089c _field7;
    struct ArenaStringPtr _field8;
    struct EdgeInsetsArchive _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
    float _field17;
    int _field18;
    int _field19;
    float _field20;
    float _field21;
    BOOL _field22;
    BOOL _field23;
    int _field24;
};

struct SheetUIStateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Point _field5;
    struct Point _field6;
    struct Size _field7;
    struct Size _field8;
    struct SelectionPathArchive _field9;
    struct Reference _field10;
    float _field11;
    float _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    unsigned int _field16;
};

struct ShortcutControllerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> _field5;
};

struct ShowArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    struct SlideTreeArchive _field7;
    struct Size _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    int _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
    double _field18;
    double _field19;
    double _field20;
};

struct ShuffleMappingArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field5;
    unsigned int _field6;
    unsigned int _field7;
    BOOL _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    BOOL _field12;
};

struct Size;

struct SlideArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct RepeatedPtrField<KN::BuildChunkArchive> _field6;
    RepeatedPtrField_54b3089c _field7;
    struct RepeatedPtrField<TSD::GuideArchive> _field8;
    struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> _field9;
    RepeatedPtrField_54b3089c _field10;
    RepeatedPtrField_54b3089c _field11;
    RepeatedPtrField_54b3089c _field12;
    RepeatedPtrField_54b3089c _field13;
    RepeatedPtrField_54b3089c _field14;
    struct ArenaStringPtr _field15;
    struct ArenaStringPtr _field16;
    struct ArenaStringPtr _field17;
    struct Reference _field18;
    struct TransitionArchive _field19;
    struct Reference _field20;
    struct Reference _field21;
    struct GeometryArchive _field22;
    struct GeometryArchive _field23;
    struct Reference _field24;
    struct Reference _field25;
    struct GeometryArchive _field26;
    struct ShapeStylePropertiesArchive _field27;
    struct ShapeStylePropertiesArchive _field28;
    struct ShapeStylePropertiesArchive _field29;
    struct Reference _field30;
    struct Reference _field31;
    struct Reference _field32;
    struct Reference _field33;
    struct Reference _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    BOOL _field41;
    BOOL _field42;
    BOOL _field43;
    BOOL _field44;
};

struct SlideCollectionSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> _field6;
    struct Reference _field7;
    struct Range _field8;
};

struct SlideNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    struct RepeatedPtrField<TSP::Size> _field7;
    RepeatedPtrField_867c874a _field8;
    struct RepeatedPtrField<KN::SlideNodeArchive_SlideSpecificHyperlinkMapEntry> _field9;
    RepeatedPtrField_fe7cf120 _field10;
    struct ArenaStringPtr _field11;
    struct ArenaStringPtr _field12;
    struct Reference _field13;
    struct Reference _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
    BOOL _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    unsigned int _field23;
    unsigned int _field24;
    BOOL _field25;
    BOOL _field26;
    BOOL _field27;
    BOOL _field28;
    unsigned int _field29;
    unsigned int _field30;
    BOOL _field31;
    unsigned int _field32;
};

struct SlideStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StyleArchive _field5;
    struct SlideStylePropertiesArchive _field6;
    unsigned int _field7;
};

struct SlideStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FillArchive _field5;
    struct TransitionAttributesArchive _field6;
    BOOL _field7;
    BOOL _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
};

struct SlideTreeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct Reference _field6;
};

struct SmartFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
};

struct SmartStrokeArchive;

struct SnappySource {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    id _field5;
    NSUInteger _field6;
    NSUInteger _field7;
    char _field8;
};

struct SortRuleReferenceTrackerArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
};

struct SparseReferenceArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDPathArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> _field5;
    unsigned int _field6;
};

struct Spec {
    struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> _field1;
    unsigned int _field2;
};

struct StateSpec {
    /* void * CDUnknownFunctionPointerType _field1 */;
    char _field2;
    int _field3;
    int _field4;
    struct Action _field5;
    /* void * CDUnknownFunctionPointerType _field6 */;
    /* void * CDUnknownFunctionPointerType _field7 */;
    /* void * CDUnknownFunctionPointerType _field8 */;
    struct ActionFinder _field9;
};

struct StateStack<TSCH3D::ObjectState, 6> {
    NSUInteger mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    NSUInteger mIndex;
    struct RenderState mCurrent;
    struct RenderState mStack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    NSUInteger mIndex;
    tmat4x4_3074befe mCurrent;
    tmat4x4_3074befe mStack[8];
};

struct StockArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> _field5;
    struct ArenaStringPtr _field6;
    double _field7;
};

struct StringCellValueArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct FormatStructArchive _field6;
    BOOL _field7;
    BOOL _field8;
};

struct StringNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ExpressionNodeArchive _field6;
};

struct StrokeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Color _field5;
    struct StrokePatternArchive _field6;
    struct SmartStrokeArchive _field7;
    struct FrameArchive _field8;
    struct PatternedStrokeArchive _field9;
    float _field10;
    int _field11;
    int _field12;
    float _field13;
};

struct StrokePatternArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_75407ea4 _field5;
    int _field6;
    float _field7;
    unsigned int _field8;
};

struct StrokePresetDataArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct StrokeArchive _field5;
    struct StrokeArchive _field6;
    struct StrokeArchive _field7;
    int _field8;
};

struct StrokePresetListArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> _field5;
    struct RepeatedPtrField<TST::StrokePresetDataArchive> _field6;
    int _field7;
};

struct StrokeSelectionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    int _field5;
};

struct StructuredTextImportRecord {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct StructuredTextImportSettings _field7;
    struct CellRegion _field8;
    double _field9;
    NSUInteger _field10;
    NSUInteger _field11;
    NSUInteger _field12;
    float _field13;
};

struct StructuredTextImportSettings {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_fe7cf120 _field5;
    RepeatedPtrField_fe7cf120 _field6;
    RepeatedPtrField_fe7cf120 _field7;
    RepeatedPtrField_fe7cf120 _field8;
    struct IndexSet _field9;
    int _field10;
    int _field11;
    NSUInteger _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
};

struct StyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Reference _field7;
    struct Reference _field8;
    BOOL _field9;
};

struct StyleDiffArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct CharacterStylePropertyChangeSetArchive _field6;
    struct ParagraphStylePropertyChangeSetArchive _field7;
    struct ShapeStylePropertyChangeSetArchive _field8;
};

struct StyleOwnerPath {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
};

struct StyleSwapUndoTupleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct UUID _field8;
    unsigned int _field9;
    int _field10;
};

struct StyleSwapUndoTuplesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_6c786866 _field5;
};

struct StylesheetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field6;
    struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> _field7;
    struct Reference _field8;
    BOOL _field9;
    BOOL _field10;
};

struct SummaryCellVendorArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::SummaryCellVendorArchive_SummaryCellEntry> _field5;
    struct Reference _field6;
};

struct SummaryModelGroupByChangeStateArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedField<double> _field5;
    struct RepeatedField<double> _field6;
    RepeatedField_92283dc2 _field7;
    struct Reference _field8;
};

struct TOCAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct DrawableAttachmentArchive _field5;
};

struct TOCEntryInstanceArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Reference _field7;
    struct Reference _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
};

struct TOCEntryStyleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ParagraphStyleArchive _field5;
    struct TOCEntryStylePropertiesArchive _field6;
};

struct TOCEntryStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    BOOL _field6;
    BOOL _field7;
};

struct TOCInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_6e0d89e6 _field6;
    struct ShapeInfoArchive _field7;
    struct Reference _field8;
    BOOL _field9;
};

struct TOCLayoutHintArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Range _field5;
};

struct TOCSettingsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> _field5;
    struct ArenaStringPtr _field6;
    unsigned int _field7;
};

struct TPSectionEnumerator {
    id _field1;
    NSUInteger _field2;
    NSRange * _field3;
    NSRange * _field4;
};

struct TSCEASTNodeArray {
    char _field1;
    NSUInteger _field2;
    NSUInteger _field3;
    id _field4;
    BOOL _field5;
};

struct TSCEASTNodeArrayChunk;

struct TSCEAbstractVector;

struct TSCEAnyRef {
    unsigned short _refType;
    struct TSCESpanningRangeRef _spanningRef;
    BOOL _couldBeIntersection;
    TSCEReferenceSetWrapper *_refSet;
};

struct TSCEBitGrid {
    struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> _tiles;
    NSUInteger _count;
    NSUInteger _lastTileFoundAtIndex;
    struct unordered_map<unsigned int, TSUIndexSet *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSUIndexSet *>>> _bitsInColumn;
};

struct TSCEBitGridTile;

struct TSCEBitGridTransaction {
    struct TSCEBitGrid _field1;
    struct vector<std::__1::pair<NSRange *, NSRange *>, std::__1::allocator<std::__1::pair<NSRange *, NSRange *>>> _field2;
    struct vector<std::__1::pair<NSRange *, NSRange *>, std::__1::allocator<std::__1::pair<NSRange *, NSRange *>>> _field3;
};

struct TSCEBooleanValue {
    /* void * CDUnknownFunctionPointerType _field1 */;
    BOOL _field2;
    struct TSCEFormat _field3;
};

struct TSCECalcEngine {
    id _field1;
    id _field2;
    struct TSCEDependencyTracker _field3;
    id _field4;
    id _field5;
    int _field6;
    struct _opaque_pthread_mutex_t _field7;
    BOOL _field8;
    int _field9;
    id _field10;
    BOOL _field11;
    double _field12;
    id _field13;
    id _field14;
    id _field15;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _field16;
    unordered_set_c6a929bd _field17;
    struct vector<TSCERecalcPhaseState *, std::__1::allocator<TSCERecalcPhaseState *>> _field18;
    struct TSCEInternalCellRefSet _field19;
    struct TSCECellRefSet _field20;
    struct _opaque_pthread_mutex_t _field21;
    BOOL _field22;
    BOOL _field23;
    struct os_unfair_lock_s _field24;
    struct TSCERefResolverMap _field25;
    id _field26;
    NSUInteger _field27;
    id _field28;
    id _field29;
    id _field30;
    NSUInteger _field31;
    id _field32;
    id _field33;
    id _field34;
    int _field35;
    id _field36;
    id _field37;
    id _field38;
    id _field39;
    BOOL _field40;
    id _field41;
    id _field42;
    BOOL _field43;
    id _field44;
    id _field45;
    id _field46;
    id _field47;
    id _field48;
    BOOL _field49;
    BOOL _field50;
    BOOL _field51;
    id _field52;
    id _field53;
    id _field54;
    id _field55;
    BOOL _field56;
    BOOL _field57;
    id _field58;
    id _field59;
};

struct TSCECategoryRef {
    UUIDData_5fbc143e _groupByUid;
    UUIDData_5fbc143e _columnUid;
    UUIDData_5fbc143e _relativeGroupUid;
    UUIDData_5fbc143e _absoluteGroupUid;
    unsigned char _aggType;
    unsigned char _groupLevel;
    struct TSUPreserveFlags _preserveFlags;
    short _relativeColumn;
};

struct TSCECellCoordSet {
    struct unordered_map<unsigned short, TSUIndexSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> _field1;
};

struct TSCECellCoordToReferringColumnRefs {
    struct unordered_map<TSUCellCoord, TSCECombinedColumnRefs, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCECombinedColumnRefs>>> _field1;
};

struct TSCECellDependencies {
    struct TSCEDependencyTracker _field1;
    struct vector<TSCECellRecordTile *, std::__1::allocator<TSCECellRecordTile *>> _field2;
    NSUInteger _field3;
    struct TSCEBitGrid _field4;
    struct TSCEBitGrid _field5;
    struct TSCEBitGrid _field6;
    struct TSCEBitGrid _field7;
    struct TSCEBitGrid _field8;
    UUIDData_5fbc143e _field9;
    unsigned short _field10;
    struct TSCESubFormulaOwnerID _field11;
    BOOL _field12;
    struct TSCECellRecordList _field13;
};

struct TSCECellRandSeed {
    NSUInteger _field1;
    NSUInteger _field2;
    NSUInteger _field3;
};

struct TSCECellRecordList;

struct TSCECellRecordTile;

struct TSCECellRef {
    struct TSUCellCoord coordinate;
    UUIDData_5fbc143e _tableUID;
};

struct TSCECellRefSet {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> _coordsForOwnerUid;
};

struct TSCECrossTableReference {
    struct TSCERelativeCellCoordinate _relativeCoord;
    UUIDData_5fbc143e _tableUID;
    struct TSUPreserveFlags _preserveFlags;
};

struct TSCEDateValue {
    /* void * CDUnknownFunctionPointerType _vptr$TSCEAbstractValue */;
    NSDate *mDate;
    struct TSCEFormat mFormat;
};

struct TSCEDependencyTracker {
    id _field1;
    id _field2;
    struct TSCECalcEngine _field3;
    struct TSCEIDMap _field4;
    struct unordered_map<unsigned short, TSCEFormulaOwnerDependencies *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCEFormulaOwnerDependencies *>>> _field5;
    unordered_set_c6a929bd _field6;
    BOOL _field7;
    BOOL _field8;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field9;
    struct TSCEInternalCellRefSet _field10;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field11;
    struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field12;
    struct TSCEInternalCellReference _field13;
    struct _opaque_pthread_mutex_t _field14;
    struct TSCEInternalCellRefSet _field15;
    _Atomic long long _field16;
    NSUInteger _field17;
    BOOL _field18;
    NSUInteger _field19;
    id _field20;
    id _field21;
    id _field22;
};

struct TSCEErrorValue {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
};

struct TSCEEvalRef {
    struct TSCETableResolver _field1;
    struct TSUCellTractRef _field2;
};

struct TSCEEvaluationContext {
    struct TSCEEvaluationStack _field1;
    id _field2;
    id _field3;
    BOOL _field4;
    BOOL _field5;
    BOOL _field6;
    struct TSCEWarningReportingContext _field7;
    UUIDData_5fbc143e _field8;
    struct TSUCellCoord _field9;
    struct TSCEValueBindingEnvironment _field10;
    struct TSCESymbolTable _field11;
    UUIDData_5fbc143e _field12;
    id _field13;
    BOOL _field14;
    struct TSCEReferenceSet _field15;
    struct TSCERandGenerator _field16;
    id _field17;
};

struct TSCEEvaluationStack {
    vector_a1208d01 _field1;
    int _field2;
};

struct TSCEFormat {
    struct TSCEFormatStruct _formatStruct;
    unsigned char _formatState;
};

struct TSCEFormatStruct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
    } ;
    TSKDateTimeFormat *_dateTimeFormat;
    TSKCustomFormatWrapper *_customFormatWrapper;
    TSKBooleanFormat *_booleanFormat;
};

struct TSCEFormula {
    struct TSCEASTNodeArray _astNodeArray;
    struct TSCEFormulaTranslationFlags _translationFlags;
    UUIDData_5fbc143e _hostTableUID;
    UUIDData_5fbc143e _hostColumnUID;
    UUIDData_5fbc143e _hostRowUID;
};

struct TSCEFormulaContainingCell {
    struct TSCECellRef _field1;
    struct TSCECellRef _field2;
    BOOL _field3;
    BOOL _field4;
};

struct TSCEFormulaCreator {
    id /* CDUnknownBlockType */ _field1;
};

struct TSCEFormulaRewriteContext {
    id _field1;
    id _field2;
    struct vector<TSCEFormulaRewriteContextRecord, std::__1::allocator<TSCEFormulaRewriteContextRecord>> _field3;
};

struct TSCEFormulaRewriteContextRecord;

struct TSCEFormulaTranslationFlags {
    unsigned char _flags;
};

struct TSCEFunctionArgSpec {
    int _argumentType;
    int _accessorMode;
    unsigned char _rangeContext;
    int _argumentContext;
    unordered_set_07fa9bdb _disallowedTypes;
    vector_a1208d01 _modeValues;
    short _defaultModeIndex;
    TSCEFunctionSpec *_functionSpec;
    double _minValue;
    double _maxValue;
    short _index;
    BOOL _minInclusive;
    BOOL _maxInclusive;
    BOOL _disallowDuration;
    BOOL _disallowCurrency;
    BOOL _isInteger;
    BOOL _forceArrayMode;
    BOOL _referenceForGeometryOnly;
};

struct TSCEFunctor {
    struct TSCEFormula _formula;
    unsigned char _numArgs;
};

struct TSCEGroupingColumnChange;

struct TSCEIDAllocator<unsigned short> {
    unsigned short _field1;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> _field2;
};

struct TSCEIDMap {
    struct os_unfair_lock_s _field1;
    struct TSCEIDAllocator<unsigned short> _field2;
    struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> _field3;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> _field4;
    struct unordered_map<unsigned short, TSCESubFormulaOwnerID, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCESubFormulaOwnerID>>> _field5;
    struct unordered_map<TSCESubFormulaOwnerID, unsigned short, std::__1::hash<TSCESubFormulaOwnerID>, std::__1::equal_to<TSCESubFormulaOwnerID>, std::__1::allocator<std::__1::pair<const TSCESubFormulaOwnerID, unsigned short>>> _field6;
    struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> _field7;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _field8;
};

struct TSCEInternalCellRefSet {
    struct unordered_map<unsigned short, TSCECellCoordSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCECellCoordSet>>> _field1;
};

struct TSCEInternalCellReference {
    struct TSUCellCoord _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct TSCENamedReferenceTrieNode {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> _trackedReferencesByOwner;
    struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> _children;
};

struct TSCENumberValue {
    /* void * CDUnknownFunctionPointerType _vptr$TSCEAbstractValue */;
    struct TSUDecimal _decimal;
    int _baseUnits[1];
    struct TSCEFormat _format;
    BOOL _isUnitlessZero;
};

struct TSCERandGenerator {
    struct TSCECellRandSeed _field1;
    struct {
        struct CC_SHA1state_st _field1;
        unsigned char _field2[20];
        unsigned char _field3[20];
        unsigned int _field4;
    } _field2;
};

struct TSCERangeCoordinate {
    struct TSUCellCoord _topLeft;
    struct TSUCellCoord _bottomRight;
};

struct TSCERangeDependencies {
    struct TSCEDependencyTracker _field1;
    unsigned short _field2;
    struct RTree<unsigned int, 2, double, 8, 4> _field3;
    struct unordered_multimap<TSUCellCoord, TSCEInternalRangeReference, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCEInternalRangeReference>>> _field4;
};

struct TSCERangeRef {
    struct TSCERangeCoordinate range;
    UUIDData_5fbc143e _tableUID;
};

struct TSCERecalcPhaseState;

struct TSCERefErrors {
    struct TSCEDependencyTracker _field1;
    unsigned short _field2;
    struct unordered_map<TSUCellCoord, TSCERefErrorCell, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERefErrorCell>>> _field3;
};

struct TSCERefResolverMap {
    struct _opaque_pthread_mutex_t _field1;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> _field2;
    BOOL _field3;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> _field4;
    struct vector<TSCETableResolver *, std::__1::allocator<TSCETableResolver *>> _field5;
};

struct TSCEReferenceSet {
    struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> _field1;
    unordered_set_c6a929bd _field2;
    unordered_set_c6a929bd _field3;
    unordered_set_c6a929bd _field4;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> _field5;
    struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> _field6;
    struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> _field7;
    struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> _field8;
    struct TSCEDependencyTracker _field9;
};

struct TSCEReferenceValue {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct TSCEEvalRef _field2;
    struct TSUCellCoord _field3;
    struct shared_ptr<TSCEValue> _field4;
    BOOL _field5;
    BOOL _field6;
    struct TSUPreserveFlags _field7;
    BOOL _field8;
    struct TSCEWarningReportingContext _field9;
};

struct TSCERegionNode {
    NSUInteger _field1;
    struct TSCERegionNode _field2;
    void _field3;
};

struct TSCERelativeCellCoordinate {
    int row;
    short column;
    BOOL _preserveRow;
    BOOL _preserveColumn;
};

struct TSCERelativeCellRef {
    struct TSCERelativeCellCoordinate relativeCoord;
    UUIDData_5fbc143e tableUID;
    unsigned int preserveColumn:1;
    unsigned int preserveRow:1;
    unsigned int isSpanningColumn:1;
    unsigned int isSpanningRow:1;
};

struct TSCEReplaceFormulaOptions {
    id _field1;
    BOOL _field2;
    BOOL _field3;
};

struct TSCESpanningDependencies {
    struct TSCEDependencyTracker _field1;
    UUIDData_5fbc143e _field2;
    unsigned short _field3;
    BOOL _field4;
    struct TSCERangeCoordinate _field5;
    struct TSCERangeCoordinate _field6;
    struct TSCERangeCoordinate _field7;
    struct TSCERangeCoordinate _field8;
    struct TSCECellCoordToReferringColumnRefs _field9;
    struct unordered_map<TSCEColumnRangeContextPair, TSCECellCoordSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCECellCoordSet>>> _field10;
    struct unordered_map<TSCEColumnRangeContextPair, TSCEInternalCellRefSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> _field11;
};

struct TSCESpanningRangeRef {
    struct TSCERangeRef rangeRef;
    unsigned char rangeContext;
};

struct TSCEStringValue {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    struct TSCEFormat _field3;
};

struct TSCESubFormulaOwnerID {
    UUIDData_5fbc143e _baseOwnerUID;
    unsigned short _ownerIndex;
};

struct TSCESymbolTable {
    id _field1;
    unsigned int _field2;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field3;
    struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> _field4;
    struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> _field5;
};

struct TSCETableResolver {
    /* void * CDUnknownFunctionPointerType _field1 */;
};

struct TSCETaggedDecimal;

struct TSCETaggedDecimalList {
    struct vector<TSCETaggedDecimal, std::__1::allocator<TSCETaggedDecimal>> _list;
    NSUInteger _startIdx;
    NSUInteger _size;
};

struct TSCEValue {
    struct TSCENumberValue _numberValue;
    NSUInteger _buff[19];
    int _type;
};

struct TSCEValueBindingEnvironment {
    struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> _field1;
    struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> _field2;
};

struct TSCEVector {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSCEFormat _field3;
};

struct TSCEVectorIndexPair {
    unsigned int column;
    unsigned int row;
};

struct TSCEVolatileDependencies {
    struct TSCEDependencyTracker _field1;
    UUIDData_5fbc143e _field2;
    unsigned short _field3;
    struct TSCECellCoordSet _field4;
    struct TSCECellCoordSet _field5;
    struct TSCECellCoordSet _field6;
    struct TSCECellCoordSet _field7;
    struct TSCECellCoordSet _field8;
    struct TSCECellCoordSet _field9;
    struct TSCECellCoordSet _field10;
    struct TSCECellCoordSet _field11;
    struct unordered_map<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet, TSCE::TSCERemoteDataSpecifierHash, TSCE::TSCERemoteDataSpecifierEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> _field12;
    struct unordered_map<TSUCellCoord, TSCERemoteDataSpecifierSet *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERemoteDataSpecifierSet *>>> _field13;
    struct TSCEInternalCellRefSet _field14;
    struct unordered_multimap<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> _field15;
};

struct TSCEWarningReportingContext {
    BOOL _field1;
    BOOL _field2;
    id _field3;
};

struct TSCEWholeOwnerDependencies {
    struct TSCEDependencyTracker _field1;
    unsigned short _field2;
    struct TSCEInternalCellRefSet _field3;
    struct unordered_multimap<TSUCellCoord, unsigned short, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, unsigned short>>> _field4;
    struct TSCEInternalCellRefSet _field5;
};

struct TSCH3DChartRotationLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    CGSize layoutSize;
    CGSize requestLayoutSize;
    CGSize chartBodyLayoutSize;
    CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_b1c75024 layoutSettings;
    BOOL forcedValid;
};

struct TSCH3DShaderType {
    NSUInteger mValue;
};

struct TSCH3DShaderVariableScopeType {
    NSUInteger mValue;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> mScopes;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    CGRect _field1;
    CGRect _field2;
    CGRect _field3;
};

struct TSCHChartPieLabelGeometries {
    struct TSCHChartPieLabelGeometry _field1;
    struct TSCHChartPieLabelGeometry _field2;
};

struct TSCHChartPieLabelGeometry {
    CGAffineTransform _field1;
    CGSize _field2;
    CGRect _field3;
    CGRect _field4;
};

struct TSCHChartPieLabelRects {
    CGRect _field1;
    CGRect _field2;
};

struct TSCHChartPieWedgeElementLayoutSystem {
    long long coordinateSpace;
    CGPoint centerPoint;
};

struct TSCHLegendAnchorLine {
    CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSCHTextLayoutResults {
    CGRect _field1;
    double _field2;
    BOOL _field3;
};

struct TSTCSENodeData {
    NSUInteger _field1;
    NSUInteger _field2;
};

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :32;
    } _field1;
    unsigned char _field2[0];
};

struct TSTCellUID {
    UUIDData_5fbc143e _column;
    UUIDData_5fbc143e _row;
};

struct TSTColumnOrRowMap {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    BOOL _field4;
};

struct TSTDurationWrapper {
    double timeInterval;
    CDStruct_b1177b60 durationFormat;
};

struct TSTGroupingLevelAndType;

struct TSTImportFormulaWarning {
    long long mType;
    NSString *mOriginalFormula;
    NSString *mSupplementaryText;
};

struct TSTImportWarningSetCellWarningFlags {
    unsigned int mCondFormatAboveAvgEqualAverageImportWarning:1;
    unsigned int mCondFormatAboveAvgStdDevImportWarning:1;
    unsigned int mCondFormatComplexFormulaImportWarning:1;
    unsigned int mCondFormatContainsErrorsImportWarning:1;
    unsigned int mCondFormatExprImportWarning:1;
    unsigned int mCondFormatNotContainsErrorsImportWarning:1;
    unsigned int mCondFormatParametersNotAllTheSameTypeImportWarning:1;
    unsigned int mCondFormatStopIfTrueImportWarning:1;
    unsigned int mCondFormatUnsupportedOperatorImportWarning:1;
    unsigned int mCondFormatUnsupportedStylingImportWarning:1;
    unsigned int mCondFormatUnsupportedTimePeriodImportWarning:1;
    unsigned int mUnsupportedConditionalFormatImportWarning:1;
    unsigned int mUnsupportedDataFormatImportWarning:1;
};

struct TSTPlanForGroupingCell {
    unsigned short _field1;
    struct vector<TSTGroupingLevelAndType, std::__1::allocator<TSTGroupingLevelAndType>> _field2;
};

struct TSTSimpleRange {
    long long origin;
    NSUInteger length;
};

struct TSTStrokeLayerRun;

struct TSTStrokeWidthCacheEntry;

struct TSTTableTileRowBuffer {
    struct {
        struct __CFData data;
        NSUInteger bufferSize;
        unsigned short offsets;
        unsigned short offsetBufferCount;
        BOOL wideOffsets;
    } _private;
};

struct TSUCellCoord {
    unsigned int row;
    unsigned short column;
    BOOL _preserveRow;
    BOOL _preserveColumn;
};

struct TSUCellRect {
    struct TSUCellCoord origin;
    struct {
        unsigned int numberOfColumns;
        unsigned int numberOfRows;
    } size;
};

struct TSUCellTractRef {
    struct TSUIndexSet _columns;
    struct TSUIndexSet _rows;
    UUIDData_5fbc143e _tableUID;
    unsigned char _spanType;
    struct TSUPreserveFlags _preserveFlags;
    BOOL _preserveRectangular;
    BOOL _mixedColumnStartedWithPreserve;
    BOOL _mixedRowStartedWithPreserve;
};

struct TSUChromeCellCoord {
    struct TSUCellCoord _field1;
};

struct TSUChromeColumnIndex {
    unsigned short _field1;
};

struct TSUChromeRowIndex {
    unsigned int _field1;
};

struct TSUColumnRowOffset {
    int _field1;
    int _field2;
};

struct TSUDecimal {
    struct {
        NSUInteger w[2];
    } _decimal;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUIndexRange {
    long long _begin;
    long long _end;
};

struct TSUIndexRangeStruct {
    long long _field1;
    long long _field2;
};

struct TSUIndexSet {
    unsigned int _isEmpty:1;
    unsigned int _hasSingleRange:1;
    struct TSUIndexRange _singleRange;
    CDStruct_183601bc _multipleRanges;
};

struct TSUModelCellCoord {
    struct TSUCellCoord _coord;
};

struct TSUModelCellRect {
    struct TSUCellRect _field1;
};

struct TSUModelColumnIndex {
    unsigned short _column;
};

struct TSUModelColumnOrRowIndex {
    unsigned int _field1;
};

struct TSUModelRowIndex {
    unsigned int _row;
};

struct TSUNumberOrDateLexer {
    NSString *_decimalSeparator;
    NSString *_currencyDecimalSeparator;
    NSString *_groupingSeparator;
    NSString *_currencyGroupingSeparator;
    NSString *_percentSymbol;
    unsigned short _decSep;
    unsigned short _currDecSep;
    unsigned short _groupSep;
    unsigned short _currGroupSep;
    unsigned short _percentSym;
    unsigned short _alternateDecSep;
    unsigned short _alternateGroupSep;
    unsigned short _alternatePercentSym;
    BOOL _checkedForAlternateSeparators;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _dateSeps;
    unsigned short _timeSep;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _additionalIdentChars;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _identStartChars;
    struct unordered_map<NSString *, unsigned long long, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned long long>>> _identifierToClassificationMap;
    struct unordered_map<unsigned short, TSUNumerAndDenom, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUNumerAndDenom>>> _vulgarFractionMap;
    BOOL _loadInDateTimeSymbols;
    NSString *_localeIdentifier;
};

struct TSUOpstat_s {
    BOOL running;
    NSUInteger count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSUPointerKeyDictionary {
    Class _field1;
    struct __CFDictionary _field2;
};

struct TSUPreserveFlags {
    unsigned char _flags;
};

struct TSUViewCellCoord {
    struct TSUCellCoord _field1;
};

struct TSUViewCellRect {
    struct TSUCellRect _rect;
};

struct TSUViewColumnIndex {
    unsigned short _column;
};

struct TSUViewColumnOrRowIndex {
    unsigned int _field1;
};

struct TSUViewRowIndex {
    unsigned int _field1;
};

struct TSWPAttributeArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    NSUInteger _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    struct TSWPAttributeRecord _field5;
    id _field6;
    NSUInteger _field7;
    BOOL _field8;
};

struct TSWPAttributeEnumerator {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    struct TSWPAttributeArray _field5;
    BOOL _field6;
    NSUInteger _field7;
    BOOL _field8;
    struct TSWPAttributeRecord _field9;
};

struct TSWPAttributeRecord {
    NSUInteger _field1;
    id _field2;
    struct TSWPParagraphData _field3;
};

struct TSWPChangeAttributeArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    NSUInteger _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    struct TSWPAttributeRecord _field5;
    id _field6;
    NSUInteger _field7;
    BOOL _field8;
    BOOL _field9;
    id _field10;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    CGRect _field3;
    id _field4;
    id _field5;
    NSUInteger _field6;
    CGColorRef_field7;
    double _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
    NSUInteger _field18;
    NSRange * _field19;
    id _field20;
    id _field21;
    NSRange * _field22;
    NSRange * _field23;
    NSUInteger _field24;
    NSRange * _field25;
    id _field26;
    id _field27;
};

struct TSWPFontHeightInfo {
    double spaceBefore;
    double attachmentHeight;
    double ascent;
    double descent;
    double leadingAbove;
    double leadingBelow;
    double spaceAfter;
    double verticalHeight;
};

struct TSWPLineFragment {
    NSUInteger _field1;
    NSUInteger _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    double _field5;
    CGRect _field6;
    CGRect _field7;
    struct TSWPFontHeightInfo _field8;
    id _field9;
    id _field10;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field11;
    double _field12;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
    id _field21;
    id _field22;
    unsigned int _field23;
    double _field24;
    id _field25;
    id _field26;
    id _field27;
    id _field28;
    id _field29;
    NSUInteger _field30;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field31;
    id _field32;
    double _field33;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef {
    struct __CTLine _field1;
    CGPoint _field2;
    NSRange * _field3;
    NSUInteger _field4;
    CGAffineTransform _field5;
    NSUInteger _field6;
};

struct TSWPMarkers {
    struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> _field1;
    BOOL _field2;
    BOOL _field3;
    BOOL _field4;
    BOOL _field5;
};

struct TSWPParagraphAttributeArray {
    /* void * CDUnknownFunctionPointerType _field1 */;
    NSUInteger _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    struct TSWPAttributeRecord _field5;
    id _field6;
    NSUInteger _field7;
    BOOL _field8;
    BOOL _field9;
    NSUInteger _field10;
    NSUInteger _field11;
    struct TSWPParagraphAttributeArray _field12;
    NSUInteger _field13;
};

struct TSWPParagraphData {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
};

struct TSWPParagraphEnumerator {
    id _field1;
    id _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    NSUInteger _field5;
    NSUInteger _field6;
    BOOL _field7;
    NSRange * _field8;
};

struct TSWPParagraphMetrics {
    BOOL _field1;
    CGSize _field2;
    NSUInteger _field3;
    double _field4;
};

struct TSWPParagraphTypesetter;

struct TSWPStorageAction;

struct TSWPStorageActionBuilder {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    struct TSWPStorageTransaction _field3;
    struct TSWPStorageTransaction _field4;
    BOOL _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    NSUInteger _field8;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field9;
    struct TSWPStorageAction _field10;
    BOOL _field11;
    BOOL _field12;
    int _field13;
    unsigned int _field14;
    NSUInteger _field15;
};

struct TSWPStorageActionGroup {
    int _field1;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field2;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field3;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field4;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field5;
    BOOL _field6;
    struct TSWPMarkers _field7;
};

struct TSWPStorageActionRunner {
    struct TSWPStorageActionState _field1;
    BOOL _field2;
};

struct TSWPStorageActionState {
    /* void * CDUnknownFunctionPointerType _field1 */;
    id _field2;
    struct TSWPStorageTransaction _field3;
    struct TSWPStorageTransaction _field4;
    BOOL _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    NSUInteger _field8;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field9;
    struct TSWPStorageAction _field10;
    BOOL _field11;
    BOOL _field12;
};

struct TSWPStorageChangeRange;

struct TSWPStorageParagraphIndexChange;

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> _field2;
    NSUInteger _field3;
    NSUInteger _field4;
    NSUInteger _field5;
    struct TSWPStorageActionGroup _field6;
    unsigned int _field7;
    NSUInteger _field8;
    struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> _field9;
    struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> _field10;
    struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> _field11;
    NSUInteger _field12;
    NSUInteger _field13;
    BOOL _field14;
    id _field15;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field16;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field17;
};

struct TSWPStorageTransactionObject;

struct TabArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    float _field6;
    int _field7;
};

struct TableDataList {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::TableDataList_ListEntry> _field5;
    RepeatedPtrField_54b3089c _field6;
    unsigned int _field7;
    int _field8;
};

struct TableDataList_ListEntry {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Reference _field6;
    struct FormulaArchive _field7;
    struct FormatStructArchive _field8;
    struct CustomFormatArchive _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct ImportWarningSetArchive _field12;
    struct CellSpecArchive _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct TableInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct DrawableArchive _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct UUID _field11;
    struct UUID _field12;
    struct CoordMapperArchive _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct TableRBTree {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::TableRBTree_Node> _field5;
};

struct TableSortOrderArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderArchive_SortRuleArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    unsigned int _field5;
    int _field6;
};

struct TableStrokePresetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    int _field5;
};

struct TableStyleNetworkArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    struct Reference _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    struct Reference _field13;
    struct Reference _field14;
    struct Reference _field15;
    struct Reference _field16;
    struct Reference _field17;
    struct Reference _field18;
    struct Reference _field19;
    struct Reference _field20;
    struct Reference _field21;
    struct Reference _field22;
    struct Reference _field23;
    struct Reference _field24;
    struct Reference _field25;
    struct Reference _field26;
    struct Reference _field27;
    struct Reference _field28;
    struct Reference _field29;
    struct Reference _field30;
    struct Reference _field31;
    struct Reference _field32;
    struct Reference _field33;
    struct Reference _field34;
    struct Reference _field35;
    unsigned int _field36;
};

struct TableStylePresetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
    int _field7;
};

struct TableStylePropertiesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<3> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct FillArchive _field6;
    struct Deprecated_TableStrokeArchive _field7;
    struct Deprecated_TableStrokeArchive _field8;
    struct Deprecated_TableStrokeArchive _field9;
    struct Deprecated_TableStrokeArchive _field10;
    struct Deprecated_TableStrokeArchive _field11;
    struct Deprecated_TableStrokeArchive _field12;
    struct Deprecated_TableStrokeArchive _field13;
    struct Deprecated_TableStrokeArchive _field14;
    struct Deprecated_TableStrokeArchive _field15;
    struct Deprecated_TableStrokeArchive _field16;
    struct Deprecated_TableStrokeArchive _field17;
    struct Deprecated_TableStrokeArchive _field18;
    struct Deprecated_TableStrokeArchive _field19;
    struct Deprecated_TableStrokeArchive _field20;
    struct Deprecated_TableStrokeArchive _field21;
    struct Deprecated_TableStrokeArchive _field22;
    struct StrokePresetListArchive _field23;
    struct StrokeArchive _field24;
    struct StrokeArchive _field25;
    struct StrokeArchive _field26;
    struct StrokeArchive _field27;
    struct StrokeArchive _field28;
    struct StrokeArchive _field29;
    struct StrokeArchive _field30;
    struct StrokeArchive _field31;
    struct StrokeArchive _field32;
    struct StrokeArchive _field33;
    struct StrokeArchive _field34;
    struct StrokeArchive _field35;
    struct StrokeArchive _field36;
    struct StrokeArchive _field37;
    struct StrokeArchive _field38;
    struct StrokeArchive _field39;
    struct StrokeArchive _field40;
    struct StrokeArchive _field41;
    struct StrokeArchive _field42;
    struct StrokeArchive _field43;
    struct StrokeArchive _field44;
    struct StrokeArchive _field45;
    struct StrokeArchive _field46;
    struct StrokeArchive _field47;
    struct StrokeArchive _field48;
    struct StrokeArchive _field49;
    struct StrokeArchive _field50;
    struct StrokeArchive _field51;
    struct StrokeArchive _field52;
    struct StrokeArchive _field53;
    struct StrokeArchive _field54;
    struct StrokeArchive _field55;
    struct StrokeArchive _field56;
    struct StrokeArchive _field57;
    struct StrokeArchive _field58;
    struct StrokeArchive _field59;
    BOOL _field60;
    BOOL _field61;
    BOOL _field62;
    BOOL _field63;
    BOOL _field64;
    BOOL _field65;
    BOOL _field66;
    BOOL _field67;
    int _field68;
    BOOL _field69;
    BOOL _field70;
    BOOL _field71;
    BOOL _field72;
    BOOL _field73;
    int _field74;
};

struct TableTransposeInfoArchive;

struct TabsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSWP::TabArchive> _field5;
};

struct TargetHintArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Point _field5;
    struct Size _field6;
    struct Range _field7;
    struct Range _field8;
    struct DoublePoint _field9;
    struct DoubleSize _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
};

struct TateChuYokoFieldArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct SmartFieldArchive _field5;
};

struct TexCoordTilingShaderEffectState {
    struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> _field1;
};

struct TextPresetDisplayItemArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Reference _field6;
};

struct TextStylePresetArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct Reference _field6;
    struct Reference _field7;
};

struct TextualAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    int _field6;
};

struct TextureAttributeState;

struct TextureAttributes {
    int _field1;
    int _field2;
    BOOL _field3;
    BOOL _field4;
    BOOL _field5;
    struct TextureSizeHint _field6;
    BOOL _field7;
};

struct TextureCoordinateConverter {
    box_80622335 _field1;
};

struct TextureSizeHint {
    int _field1;
    tvec2_3b141483 _field2;
};

struct TileRowInfo {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    BOOL _field12;
};

struct TileStorage {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::TileStorage_Tile> _field5;
    unsigned int _field6;
};

struct TokenAttachmentArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    UIGraphicalAttachment _field5;
    struct Reference _field6;
};

struct TopicNumberHintsArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TP::TopicNumberEntryArchive> _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct TrackedReferenceArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ASTNodeArrayArchive _field5;
    unsigned int _field6;
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    BOOL _field5;
};

struct TransitionArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct TransitionAttributesArchive _field5;
};

struct TransitionAttributesArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Color _field7;
    struct AnimationAttributesArchive _field8;
    double _field9;
    unsigned int _field10;
    float _field11;
    float _field12;
    unsigned int _field13;
    unsigned int _field14;
    BOOL _field15;
    BOOL _field16;
    BOOL _field17;
    BOOL _field18;
    float _field19;
    int _field20;
    int _field21;
};

struct UUID {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    NSUInteger _field5;
    NSUInteger _field6;
};

struct UUIDCoordArchive;

struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            NSUInteger _lower;
            NSUInteger _upper;
        } ;
    } ;
};

struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct UUIDMapArchive;

struct UUIDPath {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
};

struct UUIDRect<TSP::UUIDRect> {
    vector_4dc5f307 _colIdList;
    vector_4dc5f307 _rowIdList;
};

struct UUIDRectArchive;

struct UUIDSet<TSP::UUIDSet> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
};

struct UnarchiverReference;

struct UnarchiverRepeatedReference;

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> _field1;
};

struct UuidReferenceMapArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> _field5;
};

struct UuidSetStoreArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> _field5;
};

struct UuidSetStoreArchive_UuidSet {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_c4607516 _field5;
    unsigned int _field6;
};

struct ValueEnumerator {
    BOOL mForward;
    NSUInteger mIndex;
    NSUInteger mMax;
    double mValue;
};

struct VariableNodeArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ExpressionNodeArchive _field6;
    unsigned int _field7;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct ViewStateMetadata {
    /* void * CDUnknownFunctionPointerType _vptr$MessageLite */;
    struct InternalMetadataWithArena _internal_metadata_;
    struct HasBits<1> _has_bits_;
    struct CachedSize _cached_size_;
    RepeatedField_92283dc2 version_;
    int _version_cached_byte_size_;
    RepeatedPtrField_f8410f9e external_object_uuid_map_entries_;
    struct ComponentInfo component_;
    struct UUID version_uuid_;
};

struct WHCCol;

struct WHCRow;

struct WPTableInfoArchive {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct TableInfoArchive _field5;
    struct Reference _field6;
};

struct WrittenComponentInfo {
    id _field1;
    id _field2;
    BOOL _field3;
    BOOL _field4;
    BOOL _field5;
    id _field6;
    BOOL _field7;
    BOOL _field8;
    BOOL _field9;
    id _field10;
    id _field11;
    BOOL _field12;
    NSUInteger _field13;
    NSUInteger _field14;
    BOOL _field15;
    long long _field16;
    NSUInteger _field17;
    NSUInteger _field18;
    id _field19;
    id _field20;
    id _field21;
    id _field22;
    id _field23;
    id _field24;
};

struct WrittenObjectInfo;

struct ZeroCopyInputStream {
    /* void * CDUnknownFunctionPointerType _field1 */;
};

struct _TSDContentBlend {
    TSDTexturedRectangle *fromTR;
    TSDTexturedRectangle *toTR;
    double blendPercent;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSPReferenceOrderedSetEntry {
    void _field1;
    struct _TSPReferenceOrderedSetEntry _field2;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    NSUInteger _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFString;

struct __CTFont;

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
    NSUInteger __value_;
};

struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*> __next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> _field1;
};

struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> __next_;
};

struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> __bucket_list_;
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __value_;
    } __p1_;
    struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
        NSUInteger __value_;
    } __p2_;
    struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
        float __value_;
    } __p3_;
};

struct __list_node_base<unsigned long, void *> {
    struct __list_node_base<unsigned long, void *> __prev_;
    struct __list_node_base<unsigned long, void *> __next_;
};

struct __sFILE {
    char _field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void _field8;
    /* void * CDUnknownFunctionPointerType _field9 */;
    /* void * CDUnknownFunctionPointerType _field10 */;
    /* void * CDUnknownFunctionPointerType _field11 */;
    /* void * CDUnknownFunctionPointerType _field12 */;
    struct __sbuf _field13;
    struct __sFILEX _field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char _field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> __left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void _field3;
    void _field4;
};

struct __wrap_iter<double *> {
    double _field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _xmlBuf;

struct _xmlCharEncodingHandler;

struct _xmlDoc {
    void _field1;
    int _field2;
    char _field3;
    struct _xmlNode _field4;
    struct _xmlNode _field5;
    struct _xmlNode _field6;
    struct _xmlNode _field7;
    struct _xmlNode _field8;
    struct _xmlDoc _field9;
    int _field10;
    int _field11;
    struct _xmlDtd _field12;
    struct _xmlDtd _field13;
    struct _xmlNs _field14;
    char _field15;
    char _field16;
    void _field17;
    void _field18;
    char _field19;
    int _field20;
    struct _xmlDict _field21;
    void _field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void _field1;
    int _field2;
    char _field3;
    struct _xmlNode _field4;
    struct _xmlNode _field5;
    struct _xmlNode _field6;
    struct _xmlNode _field7;
    struct _xmlNode _field8;
    struct _xmlDoc _field9;
    struct _xmlNs _field10;
    char _field11;
    struct _xmlAttr _field12;
    struct _xmlNs _field13;
    void _field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs _field1;
    int _field2;
    char _field3;
    char _field4;
    void _field5;
    struct _xmlDoc _field6;
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> {
    struct Data _field1[3];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<bool, 8> {
    BOOL __elems_[8];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct atomic<int> {
    _Atomic int __a_;
};

struct auto_ptr<TSP::PersistedObjectUUIDMapOperation>;

struct auto_ptr<google::protobuf::Message> {
    struct Message __ptr_;
};

struct auto_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>>> {
    unordered_map_caa2f3b1 __ptr_;
};

struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 __ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    NSUInteger __cap_;
                    NSUInteger __size_;
                    char __data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    NSUInteger __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct bitset<5> {
    NSUInteger __first_;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
};

struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> {
    struct __split_buffer<EQKitLayoutContext *, std::__1::allocator<EQKitLayoutContext *>> {
        struct EQKitLayoutContext _field1;
        struct EQKitLayoutContext _field2;
        struct EQKitLayoutContext _field3;
        struct __compressed_pair<EQKitLayoutContext **, std::__1::allocator<EQKitLayoutContext *>> {
            struct EQKitLayoutContext _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutContext>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> {
    struct __split_buffer<EQKitLayoutElementaryStack *, std::__1::allocator<EQKitLayoutElementaryStack *>> {
        struct EQKitLayoutElementaryStack _field1;
        struct EQKitLayoutElementaryStack _field2;
        struct EQKitLayoutElementaryStack _field3;
        struct __compressed_pair<EQKitLayoutElementaryStack **, std::__1::allocator<EQKitLayoutElementaryStack *>> {
            struct EQKitLayoutElementaryStack _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutElementaryStack>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> {
    struct __split_buffer<EQKitLayoutRow *, std::__1::allocator<EQKitLayoutRow *>> {
        struct EQKitLayoutRow _field1;
        struct EQKitLayoutRow _field2;
        struct EQKitLayoutRow _field3;
        struct __compressed_pair<EQKitLayoutRow **, std::__1::allocator<EQKitLayoutRow *>> {
            struct EQKitLayoutRow _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutRow>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> {
    struct __split_buffer<EQKitLayoutStretchedOperator *, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
        struct EQKitLayoutStretchedOperator _field1;
        struct EQKitLayoutStretchedOperator _field2;
        struct EQKitLayoutStretchedOperator _field3;
        struct __compressed_pair<EQKitLayoutStretchedOperator **, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
            struct EQKitLayoutStretchedOperator _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutStretchedOperator>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> {
    struct __split_buffer<EQKitLayoutTable *, std::__1::allocator<EQKitLayoutTable *>> {
        struct EQKitLayoutTable _field1;
        struct EQKitLayoutTable _field2;
        struct EQKitLayoutTable _field3;
        struct __compressed_pair<EQKitLayoutTable **, std::__1::allocator<EQKitLayoutTable *>> {
            struct EQKitLayoutTable _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutTable>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> {
    struct __split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *>> {
        int __first_;
        int __begin_;
        int __end_;
        struct __compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *>> {
            int __value_;
        } __end_cap_;
    } __map_;
    NSUInteger __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState>> {
        NSUInteger __value_;
    } __size_;
};

struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct __split_buffer<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference *>> {
        struct TSCEInternalCellReference _field1;
        struct TSCEInternalCellReference _field2;
        struct TSCEInternalCellReference _field3;
        struct __compressed_pair<TSCEInternalCellReference **, std::__1::allocator<TSCEInternalCellReference *>> {
            struct TSCEInternalCellReference _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEInternalCellReference>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> {
    struct __split_buffer<TSCH3D::Transform *, std::__1::allocator<TSCH3D::Transform *>> {
        struct Transform _field1;
        struct Transform _field2;
        struct Transform _field3;
        struct __compressed_pair<TSCH3D::Transform **, std::__1::allocator<TSCH3D::Transform *>> {
            struct Transform _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCH3D::Transform>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> {
    struct __split_buffer<TSP::WrittenObjectInfo *, std::__1::allocator<TSP::WrittenObjectInfo *>> {
        struct WrittenObjectInfo __first_;
        struct WrittenObjectInfo __begin_;
        struct WrittenObjectInfo __end_;
        struct __compressed_pair<TSP::WrittenObjectInfo **, std::__1::allocator<TSP::WrittenObjectInfo *>> {
            struct WrittenObjectInfo __value_;
        } __end_cap_;
    } __map_;
    NSUInteger __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSP::WrittenObjectInfo>> {
        NSUInteger __value_;
    } __size_;
};

struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e __first_;
        UUIDData_5fbc143e __begin_;
        UUIDData_5fbc143e __end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e __value_;
        } __end_cap_;
    } __map_;
    NSUInteger __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        NSUInteger __value_;
    } __size_;
};

struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    struct __split_buffer<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>*>> {
        id _field1;
        id _field2;
        id _field3;
        struct __compressed_pair<id<EQKitLayoutNode>**, std::__1::allocator<id<EQKitLayoutNode>*>> {
            id _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<id<EQKitLayoutNode>>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> {
    struct __split_buffer<std::__1::pair<const Action *, int>*, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
        struct pair<const Action *, int> _field1;
        struct pair<const Action *, int> _field2;
        struct pair<const Action *, int> _field3;
        struct __compressed_pair<std::__1::pair<const Action *, int>**, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
            struct pair<const Action *, int> _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int>>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
    struct __split_buffer<std::__1::shared_ptr<StateSpec>*, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
        struct shared_ptr<StateSpec> _field1;
        struct shared_ptr<StateSpec> _field2;
        struct shared_ptr<StateSpec> _field3;
        struct __compressed_pair<std::__1::shared_ptr<StateSpec>**, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
            struct shared_ptr<StateSpec> _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
        NSUInteger _field1;
    } _field3;
};

struct deque<unsigned long, std::__1::allocator<unsigned long>> {
    struct __split_buffer<unsigned long *, std::__1::allocator<unsigned long *>> {
        NSUInteger _field1;
        NSUInteger _field2;
        NSUInteger _field3;
        struct __compressed_pair<unsigned long **, std::__1::allocator<unsigned long *>> {
            NSUInteger _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> _field3;
};

struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
    struct __split_buffer<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        id /* CDUnknownBlockType */ _field1;
        id /* CDUnknownBlockType */ _field2;
        id /* CDUnknownBlockType */ _field3;
        struct __compressed_pair<void (^**)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
            id /* CDUnknownBlockType */ _field1;
        } _field4;
    } _field1;
    NSUInteger _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        NSUInteger _field1;
    } _field3;
};

struct gzFile_s {
    unsigned int _field1;
    char _field2;
    long long _field3;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        NSUInteger __value_;
    } __size_alloc_;
};

struct map<Class, int, std::__1::less<Class>, std::__1::allocator<std::__1::pair<const Class, int>>> {
    struct __tree<std::__1::__value_type<Class, int>, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>, std::__1::allocator<std::__1::__value_type<Class, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Class, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSTCellUID, TSTCell *, std::__1::less<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __tree<std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::__map_value_compare<TSTCellUID, std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::less<TSTCellUID>, true>, std::__1::allocator<std::__1::__value_type<TSTCellUID, TSTCell *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSTCellUID, std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::less<TSTCellUID>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSUCellCoord, TSTCell *, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, TSTCell *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::less<TSUCellCoord>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, TSPFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPFieldTreeNode *>>> {
    struct __tree<std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TSPFieldTreeNode *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TSPFieldTreeNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::less<int>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>>;

struct map<int, std::__1::pair<Class, std::__1::basic_string<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> {
    struct __tree<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::pair<long long, long long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, TSTTableHeaderInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableHeaderInfo *>>> {
    struct __tree<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> {
    struct __tree<std::__1::__value_type<unsigned long, CGRect>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, CGRect>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSWPFontMetricsCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontMetricsCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontMetricsCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontMetricsCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontMetricsCacheEntry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontMetricsCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontMetricsCacheEntry>, std::__1::less<unsigned long>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned short, unsigned long>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct multimap<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TSCEValue, TSUCellCoord>;

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
};

struct pair<TSUCellCoord, double>;

struct pair<NSRange *, NSRange *>;

struct pair<bool, TSCH3DShaderVariableLinkage *> {
    BOOL _field1;
    id _field2;
};

struct pair<const Action *, int>;

struct pair<const char *, const char *> {
    char _field1;
    char _field2;
};

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct pair<unsigned int, bool>;

struct pair<unsigned int, unsigned long>;

struct pair<unsigned long, unsigned short>;

struct path_descr;

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
};

struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> {
    struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> c;
};

struct range<double> {
    double _field1;
    double _field2;
};

struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
};

struct segment_data<double>;

struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            NSUInteger _field1;
            NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>;

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
    struct __tree<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<wchar_t, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<wchar_t>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<StateSpec>;

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector _field1;
    struct __shared_weak_count _field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue _field1;
    struct __shared_weak_count _field2;
};

struct shared_ptr<TSKCO::AbstractOperation> {
    struct AbstractOperation _field1;
    struct __shared_weak_count _field2;
};

struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo __ptr_;
    struct __shared_weak_count __cntrl_;
};

struct shared_ptr<TSUStringChunk>;

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray __ptr_;
    struct __shared_weak_count __cntrl_;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter _field1;
    struct __shared_weak_count _field2;
};

struct shared_ptr<google::protobuf::Message> {
    struct Message _field1;
    struct __shared_weak_count _field2;
};

struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet __ptr_;
    struct __shared_weak_count __cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> {
    struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> _field1;
};

struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> {
    struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> _field1;
};

struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> {
    struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> _field1;
};

struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> {
    struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> _field1;
};

struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> {
    struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> _field1;
};

struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>>> {
    struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> c;
};

struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> {
    struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field1;
};

struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
};

struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
};

struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> {
    struct deque<unsigned long, std::__1::allocator<unsigned long>> _field1;
};

struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> {
    struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tsuSaPage {
    /* void * CDUnknownFunctionPointerType _field1 */;
};

struct tvec1<float>;

struct tvec2<bool> {
    union {
        BOOL x;
        BOOL r;
        BOOL s;
    } ;
    union {
        BOOL y;
        BOOL g;
        BOOL t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> _field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>> {
                NSUInteger _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> __value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
                NSUInteger __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> {
    struct __compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []>> {
        char _field1;
    } _field1;
};

struct unordered_map<NSString *, unsigned long long, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, unsigned long long>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long long>, std::__1::hash<NSString *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long long>, std::__1::equal_to<NSString *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned long long>, std::__1::hash<NSString *>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned long long>, std::__1::equal_to<NSString *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> {
    struct __hash_table<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet, TSCE::TSCERemoteDataSpecifierHash, TSCE::TSCERemoteDataSpecifierEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCECategoryLevel, int, std::__1::hash<TSCECategoryLevel>, std::__1::equal_to<TSCECategoryLevel>, std::__1::allocator<std::__1::pair<const TSCECategoryLevel, int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECategoryLevel, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCECellRef, NSString *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSCEFormula, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSCEFormula>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTConditionalStyleSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSTImportWarningSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTImportWarningSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSUCellRect, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSUCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEColumnRangeContextPair, TSCECellCoordSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairHash, true>, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEColumnRangeContextPair, TSCEInternalCellRefSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairHash, true>, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::__1::hash<TSCEFunctionIndex>, std::__1::equal_to<TSCEFunctionIndex>, std::__1::allocator<std::__1::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCESubFormulaOwnerID, unsigned short, std::__1::hash<TSCESubFormulaOwnerID>, std::__1::equal_to<TSCESubFormulaOwnerID>, std::__1::allocator<std::__1::pair<const TSCESubFormulaOwnerID, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, std::__1::__unordered_map_hasher<TSCESubFormulaOwnerID, std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, std::__1::hash<TSCESubFormulaOwnerID>, true>, std::__1::__unordered_map_equal<TSCESubFormulaOwnerID, std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, std::__1::equal_to<TSCESubFormulaOwnerID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCESubFormulaOwnerID, std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, std::__1::hash<TSCESubFormulaOwnerID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCESubFormulaOwnerID, std::__1::__hash_value_type<TSCESubFormulaOwnerID, unsigned short>, std::__1::equal_to<TSCESubFormulaOwnerID>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *, std::__1::hash<TSCESubFormulaOwnerIndex>, std::__1::equal_to<TSCESubFormulaOwnerIndex>, std::__1::allocator<std::__1::pair<const TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__1::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__1::hash<TSCESubFormulaOwnerIndex>, true>, std::__1::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__1::equal_to<TSCESubFormulaOwnerIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__1::hash<TSCESubFormulaOwnerIndex>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__1::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__1::equal_to<TSCESubFormulaOwnerIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSTExpressionNode *, TSTCSENodeData, std::__1::hash<TSTExpressionNode *>, std::__1::equal_to<TSTExpressionNode *>, std::__1::allocator<std::__1::pair<TSTExpressionNode *const, TSTCSENodeData>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTFontInfoCacheDupContentEntry, double, std::__1::hash<TSTFontInfoCacheDupContentEntry>, std::__1::equal_to<TSTFontInfoCacheDupContentEntry>, std::__1::allocator<std::__1::pair<const TSTFontInfoCacheDupContentEntry, double>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__1::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__1::hash<TSTFontInfoCacheDupContentEntry>, true>, std::__1::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__1::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__1::hash<TSTFontInfoCacheDupContentEntry>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__1::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__1::equal_to<TSTFontInfoCacheDupContentEntry>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTTableDataObject *, unsigned int, TSTTableDataObjectHash, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<TSTTableDataObject *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true>, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECoordMapper *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned char, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned char>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned int, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSCECombinedColumnRefs, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCECombinedColumnRefs>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSCERefErrorCell, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERefErrorCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSCERemoteDataSpecifierSet *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERemoteDataSpecifierSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSTAggNode *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::__1::hash<TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, std::__1::allocator<std::__1::pair<const TSUModelCellCoord, TSUModelCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::__1::hash<TSUViewColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, std::__1::allocator<std::__1::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::__unordered_map_hasher<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::hash<TSUViewColumnIndex>, true>, std::__1::__unordered_map_equal<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::hash<TSUViewColumnIndex>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const char *, unsigned int, TSP::CStringHash, TSP::CStringEqualTo, std::__1::allocator<std::__1::pair<const char *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, unsigned int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>, std::__1::allocator<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ReferenceMapInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ReferenceMapInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, __unsafe_unretained Class, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DigestHash, TSP::DigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSCEValue>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSTTableDataObject *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableDataObject *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, TSUIndexSet *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSUIndexSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, __unsafe_unretained Class, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const char *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const char *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const char *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const google::protobuf::Message *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, TSPLazyReference *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSPLazyReference *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::hash<unsigned long>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, TSUModelCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUModelCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::hash<unsigned long>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSCECellCoordSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSCEFormulaOwnerDependencies *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCEFormulaOwnerDependencies *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCEFormulaOwnerDependencies *>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSCESubFormulaOwnerID, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCESubFormulaOwnerID>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCESubFormulaOwnerID>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSUIndexSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSUIndexSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSUNumerAndDenom, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUNumerAndDenom>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, std::__1::hash<unsigned short>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUNumerAndDenom>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, double, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, double>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, double>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::hash<unsigned short>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, TSCEInternalRangeReference, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCEInternalRangeReference>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinatesEqualStruct, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinateHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinatesEqualStruct, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, unsigned short, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinatesEqualStruct, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinateHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinatesEqualStruct, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
    struct __hash_table<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEArgumentType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEArgumentType>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCEArgumentType>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> {
    struct __hash_table<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECategoryRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECategoryRef>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECategoryRef>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
    struct __hash_table<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEReferenceType>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEReferenceType>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
};

struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __hash_table<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned short, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned short>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned short>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    CGPoint __begin_;
    CGPoint __end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        CGPoint __value_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    CGRect __begin_;
    CGRect __end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        CGRect __value_;
    } __end_cap_;
};

struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
    struct Entry _field1;
    struct Entry _field2;
    struct __compressed_pair<EQKit::OpticalKern::Spec::Entry *, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
        struct Entry _field1;
    } _field3;
};

struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int __begin_;
    int __end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int __value_;
    } __end_cap_;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> _field1;
    struct ObjcSharedPtr<GQDWrapPoint> _field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> _field1;
    } _field3;
};

struct vector<RefTypeHolder<TSCERangeRef, 0>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
    RefTypeHolder_1140c985 _field1;
    RefTypeHolder_1140c985 _field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 0>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
        RefTypeHolder_1140c985 _field1;
    } _field3;
};

struct vector<RefTypeHolder<TSCERangeRef, 1>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
    RefTypeHolder_45a2a752 _field1;
    RefTypeHolder_45a2a752 _field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 1>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
        RefTypeHolder_45a2a752 _field1;
    } _field3;
};

struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    NSUInteger _field1;
    NSUInteger _field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        NSUInteger _field1;
    } _field3;
};

struct vector<TSCEASTNodeArrayChunk *, std::__1::allocator<TSCEASTNodeArrayChunk *>> {
    struct TSCEASTNodeArrayChunk __begin_;
    struct TSCEASTNodeArrayChunk __end_;
    struct __compressed_pair<TSCEASTNodeArrayChunk **, std::__1::allocator<TSCEASTNodeArrayChunk *>> {
        struct TSCEASTNodeArrayChunk __value_;
    } __end_cap_;
};

struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> {
    struct TSCEBitGridTile __begin_;
    struct TSCEBitGridTile __end_;
    struct __compressed_pair<TSCEBitGridTile **, std::__1::allocator<TSCEBitGridTile *>> {
        struct TSCEBitGridTile __value_;
    } __end_cap_;
};

struct vector<TSCECategoryLevel, std::__1::allocator<TSCECategoryLevel>> {
    unsigned char _field1;
    unsigned char _field2;
    struct __compressed_pair<TSCECategoryLevel *, std::__1::allocator<TSCECategoryLevel>> {
        unsigned char _field1;
    } _field3;
};

struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef _field1;
    struct TSCECategoryRef _field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef _field1;
    } _field3;
};

struct vector<TSCECellRecordTile *, std::__1::allocator<TSCECellRecordTile *>> {
    struct TSCECellRecordTile _field1;
    struct TSCECellRecordTile _field2;
    struct __compressed_pair<TSCECellRecordTile **, std::__1::allocator<TSCECellRecordTile *>> {
        struct TSCECellRecordTile _field1;
    } _field3;
};

struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef __begin_;
    struct TSCECellRef __end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef __value_;
    } __end_cap_;
};

struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula __begin_;
    struct TSCEFormula __end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula __value_;
    } __end_cap_;
};

struct vector<TSCEFormulaRewriteContextRecord, std::__1::allocator<TSCEFormulaRewriteContextRecord>> {
    struct TSCEFormulaRewriteContextRecord _field1;
    struct TSCEFormulaRewriteContextRecord _field2;
    struct __compressed_pair<TSCEFormulaRewriteContextRecord *, std::__1::allocator<TSCEFormulaRewriteContextRecord>> {
        struct TSCEFormulaRewriteContextRecord _field1;
    } _field3;
};

struct vector<TSCEFunctionArgSpec, std::__1::allocator<TSCEFunctionArgSpec>> {
    struct TSCEFunctionArgSpec __begin_;
    struct TSCEFunctionArgSpec __end_;
    struct __compressed_pair<TSCEFunctionArgSpec *, std::__1::allocator<TSCEFunctionArgSpec>> {
        struct TSCEFunctionArgSpec __value_;
    } __end_cap_;
};

struct vector<TSCEGroupingColumnChange, std::__1::allocator<TSCEGroupingColumnChange>> {
    struct TSCEGroupingColumnChange __begin_;
    struct TSCEGroupingColumnChange __end_;
    struct __compressed_pair<TSCEGroupingColumnChange *, std::__1::allocator<TSCEGroupingColumnChange>> {
        struct TSCEGroupingColumnChange __value_;
    } __end_cap_;
};

struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct TSCEInternalCellReference _field1;
    struct TSCEInternalCellReference _field2;
    struct __compressed_pair<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference>> {
        struct TSCEInternalCellReference _field1;
    } _field3;
};

struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate __begin_;
    struct TSCERangeCoordinate __end_;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate __value_;
    } __end_cap_;
};

struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef _field1;
    struct TSCERangeRef _field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef _field1;
    } _field3;
};

struct vector<TSCERecalcPhaseState *, std::__1::allocator<TSCERecalcPhaseState *>> {
    struct TSCERecalcPhaseState _field1;
    struct TSCERecalcPhaseState _field2;
    struct __compressed_pair<TSCERecalcPhaseState **, std::__1::allocator<TSCERecalcPhaseState *>> {
        struct TSCERecalcPhaseState _field1;
    } _field3;
};

struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue _field1;
    struct TSCEReferenceValue _field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue _field1;
    } _field3;
};

struct vector<TSCESubFormulaOwnerIndex, std::__1::allocator<TSCESubFormulaOwnerIndex>> {
    unsigned short _field1;
    unsigned short _field2;
    struct __compressed_pair<TSCESubFormulaOwnerIndex *, std::__1::allocator<TSCESubFormulaOwnerIndex>> {
        unsigned short _field1;
    } _field3;
};

struct vector<TSCETableResolver *, std::__1::allocator<TSCETableResolver *>> {
    struct TSCETableResolver _field1;
    struct TSCETableResolver _field2;
    struct __compressed_pair<TSCETableResolver **, std::__1::allocator<TSCETableResolver *>> {
        struct TSCETableResolver _field1;
    } _field3;
};

struct vector<TSCETaggedDecimal, std::__1::allocator<TSCETaggedDecimal>> {
    struct TSCETaggedDecimal __begin_;
    struct TSCETaggedDecimal __end_;
    struct __compressed_pair<TSCETaggedDecimal *, std::__1::allocator<TSCETaggedDecimal>> {
        struct TSCETaggedDecimal __value_;
    } __end_cap_;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue __begin_;
    struct TSCEValue __end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue __value_;
    } __end_cap_;
};

struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo __begin_;
    struct BarElementInfo __end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::__1::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo __value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    box_a3bd9649 __begin_;
    box_a3bd9649 __end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        box_a3bd9649 __value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 _field1;
    plane_849e6053 _field2;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 _field1;
    } _field3;
};

struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> {
    struct Lookup<TSCH3D::AttributeSpecs> __begin_;
    struct Lookup<TSCH3D::AttributeSpecs> __end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>*, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::AttributeSpecs>>> {
        struct Lookup<TSCH3D::AttributeSpecs> __value_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> {
    struct Lookup<TSCH3D::TextureAttributes> __begin_;
    struct Lookup<TSCH3D::TextureAttributes> __end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>*, std::__1::allocator<TSCH3D::ObjectState::Lookup<TSCH3D::TextureAttributes>>> {
        struct Lookup<TSCH3D::TextureAttributes> __value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> __begin_;
    struct PODType<unsigned char> __end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> __value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> __begin_;
    struct PODType<unsigned short> __end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> __value_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState __begin_;
    struct ResourceAttributeState __end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState __value_;
    } __end_cap_;
};

struct vector<TSCH3D::TextureAttributeState, std::__1::allocator<TSCH3D::TextureAttributeState>> {
    struct TextureAttributeState __begin_;
    struct TextureAttributeState __end_;
    struct __compressed_pair<TSCH3D::TextureAttributeState *, std::__1::allocator<TSCH3D::TextureAttributeState>> {
        struct TextureAttributeState __value_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType __begin_;
    struct TSCH3DShaderVariableScopeType __end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType __value_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    CDStruct_183601bc _field1;
    CDStruct_183601bc _field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        CDStruct_183601bc _field1;
    } _field3;
};

struct vector<TSKOperationPropertyId, std::__1::allocator<TSKOperationPropertyId>> {
    unsigned short _field1;
    unsigned short _field2;
    struct __compressed_pair<TSKOperationPropertyId *, std::__1::allocator<TSKOperationPropertyId>> {
        unsigned short _field1;
    } _field3;
};

struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
    struct ExternalReferenceCompletionInfo _field1;
    struct ExternalReferenceCompletionInfo _field2;
    struct __compressed_pair<TSP::ExternalReferenceCompletionInfo *, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
        struct ExternalReferenceCompletionInfo _field1;
    } _field3;
};

struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
    struct FinalizeHandlerItem __begin_;
    struct FinalizeHandlerItem __end_;
    struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
        struct FinalizeHandlerItem __value_;
    } __end_cap_;
};

struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> {
    struct ObjectStackEntry __begin_;
    struct ObjectStackEntry __end_;
    struct __compressed_pair<TSP::ObjectStackEntry *, std::__1::allocator<TSP::ObjectStackEntry>> {
        struct ObjectStackEntry __value_;
    } __end_cap_;
};

struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
    struct ReferenceCompletionInfo _field1;
    struct ReferenceCompletionInfo _field2;
    struct __compressed_pair<TSP::ReferenceCompletionInfo *, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
        struct ReferenceCompletionInfo _field1;
    } _field3;
};

struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
    struct RepeatedExternalReferenceCompletionInfo __begin_;
    struct RepeatedExternalReferenceCompletionInfo __end_;
    struct __compressed_pair<TSP::RepeatedExternalReferenceCompletionInfo *, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
        struct RepeatedExternalReferenceCompletionInfo __value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference __begin_;
    struct UnarchiverReference __end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference __value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference __begin_;
    struct UnarchiverRepeatedReference __end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference __value_;
    } __end_cap_;
};

struct vector<TSTCell *, std::__1::allocator<TSTCell *>> {
    id __begin_;
    id __end_;
    struct __compressed_pair<TSTCell *__strong *, std::__1::allocator<TSTCell *>> {
        id __value_;
    } __end_cap_;
};

struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID __begin_;
    struct TSTCellUID __end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID __value_;
    } __end_cap_;
};

struct vector<TSTGroupingLevelAndType, std::__1::allocator<TSTGroupingLevelAndType>> {
    struct TSTGroupingLevelAndType _field1;
    struct TSTGroupingLevelAndType _field2;
    struct __compressed_pair<TSTGroupingLevelAndType *, std::__1::allocator<TSTGroupingLevelAndType>> {
        struct TSTGroupingLevelAndType _field1;
    } _field3;
};

struct vector<TSTNineKeyStructPreBNC, std::__1::allocator<TSTNineKeyStructPreBNC>> {
    CDStruct_183601bc __begin_;
    CDStruct_183601bc __end_;
    struct __compressed_pair<TSTNineKeyStructPreBNC *, std::__1::allocator<TSTNineKeyStructPreBNC>> {
        CDStruct_183601bc __value_;
    } __end_cap_;
};

struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun __begin_;
    struct TSTStrokeLayerRun __end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun __value_;
    } __end_cap_;
};

struct vector<TSTStrokeWidthCacheEntry, std::__1::allocator<TSTStrokeWidthCacheEntry>> {
    struct TSTStrokeWidthCacheEntry __begin_;
    struct TSTStrokeWidthCacheEntry __end_;
    struct __compressed_pair<TSTStrokeWidthCacheEntry *, std::__1::allocator<TSTStrokeWidthCacheEntry>> {
        struct TSTStrokeWidthCacheEntry __value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol __begin_;
    struct WHCCol __end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol __value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow __begin_;
    struct WHCRow __end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow __value_;
    } __end_cap_;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e __begin_;
    UUIDData_5fbc143e __end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e __value_;
    } __end_cap_;
};

struct vector<TSU::UUIDRect<TSP::UUIDRect>, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
    UUIDRect_d701734b __begin_;
    UUIDRect_d701734b __end_;
    struct __compressed_pair<TSU::UUIDRect<TSP::UUIDRect>*, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
        UUIDRect_d701734b __value_;
    } __end_cap_;
};

struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord __begin_;
    struct TSUCellCoord __end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord __value_;
    } __end_cap_;
};

struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect __begin_;
    struct TSUCellRect __end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect __value_;
    } __end_cap_;
};

struct vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect>> {
    struct TSUModelCellRect _field1;
    struct TSUModelCellRect _field2;
    struct __compressed_pair<TSUModelCellRect *, std::__1::allocator<TSUModelCellRect>> {
        struct TSUModelCellRect _field1;
    } _field3;
};

struct vector<TSUModelColumnIndex, std::__1::allocator<TSUModelColumnIndex>> {
    struct TSUModelColumnIndex __begin_;
    struct TSUModelColumnIndex __end_;
    struct __compressed_pair<TSUModelColumnIndex *, std::__1::allocator<TSUModelColumnIndex>> {
        struct TSUModelColumnIndex __value_;
    } __end_cap_;
};

struct vector<TSUModelRowIndex, std::__1::allocator<TSUModelRowIndex>> {
    struct TSUModelRowIndex __begin_;
    struct TSUModelRowIndex __end_;
    struct __compressed_pair<TSUModelRowIndex *, std::__1::allocator<TSUModelRowIndex>> {
        struct TSUModelRowIndex __value_;
    } __end_cap_;
};

struct vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>> {
    struct TSUViewCellRect _field1;
    struct TSUViewCellRect _field2;
    struct __compressed_pair<TSUViewCellRect *, std::__1::allocator<TSUViewCellRect>> {
        struct TSUViewCellRect _field1;
    } _field3;
};

struct vector<TSUViewColumnIndex, std::__1::allocator<TSUViewColumnIndex>> {
    struct TSUViewColumnIndex __begin_;
    struct TSUViewColumnIndex __end_;
    struct __compressed_pair<TSUViewColumnIndex *, std::__1::allocator<TSUViewColumnIndex>> {
        struct TSUViewColumnIndex __value_;
    } __end_cap_;
};

struct vector<TSUViewRowIndex, std::__1::allocator<TSUViewRowIndex>> {
    struct TSUViewRowIndex __begin_;
    struct TSUViewRowIndex __end_;
    struct __compressed_pair<TSUViewRowIndex *, std::__1::allocator<TSUViewRowIndex>> {
        struct TSUViewRowIndex __value_;
    } __end_cap_;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc __begin_;
    CDStruct_183601bc __end_;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc __value_;
    } __end_cap_;
};

struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> {
    NSUInteger _field1;
    NSUInteger _field2;
    struct __compressed_pair<TSWPAttributeArrayKind *, std::__1::allocator<TSWPAttributeArrayKind>> {
        NSUInteger _field1;
    } _field3;
};

struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc __begin_;
    CDStruct_183601bc __end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc __value_;
    } __end_cap_;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc _field1;
    CDStruct_183601bc _field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc _field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef _field1;
    struct TSWPLineRef _field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef _field1;
    } _field3;
};

struct vector<TSWPParagraphMetrics, std::__1::allocator<TSWPParagraphMetrics>> {
    struct TSWPParagraphMetrics __begin_;
    struct TSWPParagraphMetrics __end_;
    struct __compressed_pair<TSWPParagraphMetrics *, std::__1::allocator<TSWPParagraphMetrics>> {
        struct TSWPParagraphMetrics __value_;
    } __end_cap_;
};

struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction _field1;
    struct TSWPStorageAction _field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction _field1;
    } _field3;
};

struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> {
    struct TSWPStorageActionGroup _field1;
    struct TSWPStorageActionGroup _field2;
    struct __compressed_pair<TSWPStorageActionGroup *, std::__1::allocator<TSWPStorageActionGroup>> {
        struct TSWPStorageActionGroup _field1;
    } _field3;
};

struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> {
    struct TSWPStorageChangeRange _field1;
    struct TSWPStorageChangeRange _field2;
    struct __compressed_pair<TSWPStorageChangeRange *, std::__1::allocator<TSWPStorageChangeRange>> {
        struct TSWPStorageChangeRange _field1;
    } _field3;
};

struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
    struct TSWPStorageParagraphIndexChange _field1;
    struct TSWPStorageParagraphIndexChange _field2;
    struct __compressed_pair<TSWPStorageParagraphIndexChange *, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
        struct TSWPStorageParagraphIndexChange _field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject _field1;
    struct TSWPStorageTransactionObject _field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject _field1;
    } _field3;
};

struct vector<NSRange *, std::__1::allocator<NSRange *>> {
    NSRange * __begin_;
    NSRange * __end_;
    struct __compressed_pair<NSRange * *, std::__1::allocator<NSRange *>> {
        NSRange * __value_;
    } __end_cap_;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity __begin_;
    struct _TSWPCharIndexAndAffinity __end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity __value_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    NSUInteger __begin_;
    NSUInteger __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> _field1;
    struct segment_data<double> _field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> _field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double __begin_;
    double __end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double __value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float __begin_;
    float __end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float __value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    struct tvec1<float> __begin_;
    struct tvec1<float> __end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        struct tvec1<float> __value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d __begin_;
    tvec2_84d5962d __end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d __value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 __begin_;
    tvec2_3b141483 __end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 __value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 __begin_;
    tvec3_17f03ce0 __end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 __value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d __begin_;
    tvec4_ac57c72d __end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d __value_;
    } __end_cap_;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    id _field1;
    id _field2;
    struct __compressed_pair<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>>> {
        id _field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int __begin_;
    int __end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int __value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long _field1;
    long long _field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long _field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long __begin_;
    long long __end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long __value_;
    } __end_cap_;
};

struct vector<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> __begin_;
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> __end_;
    struct __compressed_pair<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>*, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
        struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> __value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_23d93216 _field1;
    basic_string_23d93216 _field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_23d93216 _field1;
    } _field3;
};

struct vector<std::__1::pair<TSCEValue, TSUCellCoord>, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
    struct pair<TSCEValue, TSUCellCoord> _field1;
    struct pair<TSCEValue, TSUCellCoord> _field2;
    struct __compressed_pair<std::__1::pair<TSCEValue, TSUCellCoord>*, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
        struct pair<TSCEValue, TSUCellCoord> _field1;
    } _field3;
};

struct vector<std::__1::pair<TSUCellCoord, double>, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
    struct pair<TSUCellCoord, double> __begin_;
    struct pair<TSUCellCoord, double> __end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, double>*, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
        struct pair<TSUCellCoord, double> __value_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSRange *, NSRange *>, std::__1::allocator<std::__1::pair<NSRange *, NSRange *>>> {
    struct pair<NSRange *, NSRange *> _field1;
    struct pair<NSRange *, NSRange *> _field2;
    struct __compressed_pair<std::__1::pair<NSRange *, NSRange *>*, std::__1::allocator<std::__1::pair<NSRange *, NSRange *>>> {
        struct pair<NSRange *, NSRange *> _field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned int, bool>, std::__1::allocator<std::__1::pair<unsigned int, bool>>> {
    struct pair<unsigned int, bool> __begin_;
    struct pair<unsigned int, bool> __end_;
    struct __compressed_pair<std::__1::pair<unsigned int, bool>*, std::__1::allocator<std::__1::pair<unsigned int, bool>>> {
        struct pair<unsigned int, bool> __value_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned int, unsigned long>, std::__1::allocator<std::__1::pair<unsigned int, unsigned long>>> {
    struct pair<unsigned int, unsigned long> _field1;
    struct pair<unsigned int, unsigned long> _field2;
    struct __compressed_pair<std::__1::pair<unsigned int, unsigned long>*, std::__1::allocator<std::__1::pair<unsigned int, unsigned long>>> {
        struct pair<unsigned int, unsigned long> _field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> _field1;
    struct pair<unsigned long, unsigned short> _field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> _field1;
    } _field3;
};

struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field1;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field2;
    struct __compressed_pair<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>*, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
        struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<TSUStringChunk>, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> __begin_;
    struct shared_ptr<TSUStringChunk> __end_;
    struct __compressed_pair<std::__1::shared_ptr<TSUStringChunk>*, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> __value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field1;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field2;
    struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>*, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
        struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char __begin_;
    char __end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char __value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int __begin_;
    unsigned int __end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int __value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    NSUInteger __begin_;
    NSUInteger __end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        NSUInteger __value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short __begin_;
    unsigned short __end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short __value_;
    } __end_cap_;
};

struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    id /* CDUnknownBlockType */ __begin_;
    id /* CDUnknownBlockType */ __end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        id /* CDUnknownBlockType */ __value_;
    } __end_cap_;
};

struct z_stream_s {
    char next_in;
    unsigned int avail_in;
    NSUInteger total_in;
    char next_out;
    unsigned int avail_out;
    NSUInteger total_out;
    char msg;
    struct internal_state state;
    /* void * CDUnknownFunctionPointerType zalloc */;
    /* void * CDUnknownFunctionPointerType zfree */;
    void opaque;
    int data_type;
    NSUInteger adler;
    NSUInteger reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} Color_1703f521;

typedef struct {
    int _field1;
    BOOL _field2;
    BOOL _field3;
    BOOL _field4;
    BOOL _field5;
} Config_5da22101;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct Collection _field2;
    struct EQKitCacheLRUCounter _field3;
} Manager_e51557f8;

typedef struct {
    struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>> _field1;
    struct EQKitCacheLRUCounter _field2;
    BOOL _field3;
    struct QuantizationConfig _field4;
} Manager_36464627;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr _field4;
    int _field5;
    int _field6;
    BOOL _field7;
    BOOL _field8;
    int _field9;
    int _field10;
    int _field11;
    char _field12;
} Path_1b135553;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ColumnsArchive _field5;
    struct PaddingArchive _field6;
    struct Reference _field7;
    int _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    unsigned int _field13;
    BOOL _field14;
    BOOL _field15;
} ShapeStylePropertiesArchive_40023a7c;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct FillArchive _field5;
    struct StrokeArchive _field6;
    struct ShadowArchive _field7;
    struct ReflectionArchive _field8;
    struct LineEndArchive _field9;
    struct LineEndArchive _field10;
    float _field11;
} ShapeStylePropertiesArchive_29ded0b1;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RangeReferenceArchive _field5;
    struct ChartSelectionArchive _field6;
    struct Reference _field7;
    struct DrawableSelectionArchive _field8;
} ChartSelectionArchive_37da73c9;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Range _field5;
    struct Range _field6;
    int _field7;
    int _field8;
    int _field9;
} SelectionArchive_60db26a8;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct DocumentArchive _field6;
    struct Reference _field7;
} DocumentArchive_c09d36d4;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct Reference _field5;
    struct Reference _field6;
} PencilAnnotationArchive_1f7597f0;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    int _field13;
    int _field14;
    float _field15;
} Color_91cc6e9e;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct ArenaStringPtr _field5;
    struct ChartMediatorArchive _field6;
    struct ChartMediatorFormulaStorage _field7;
    BOOL _field8;
    BOOL _field9;
} ChartMediatorArchive_cad320ad;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> _field5;
    struct Reference _field6;
    struct DrawableSelectionArchive _field7;
} ChartSelectionArchive_e2e12b33;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::Path_Element> _field5;
} Path_7ba6a769;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ThemeArchive _field6;
} ThemeArchive_ccb375dc;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct Reference _field8;
    struct Reference _field9;
    BOOL _field10;
    BOOL _field11;
    BOOL _field12;
    BOOL _field13;
} DocumentArchive_5ff44d3a;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    struct RepeatedPtrField<TSCH::ChartUIState> _field6;
    RepeatedPtrField_54b3089c _field7;
    RepeatedPtrField_54b3089c _field8;
    RepeatedPtrField_54b3089c _field9;
    RepeatedPtrField_54b3089c _field10;
    struct Reference _field11;
    struct Reference _field12;
    struct Size _field13;
    struct Point _field14;
    struct Point _field15;
    struct Point _field16;
    struct Reference _field17;
    struct Point _field18;
    struct Size _field19;
    struct Point _field20;
    struct SelectionPathArchive _field21;
    struct Reference _field22;
    struct Reference _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    BOOL _field29;
    BOOL _field30;
    BOOL _field31;
    BOOL _field32;
    float _field33;
    float _field34;
    float _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    BOOL _field39;
    float _field40;
    float _field41;
    BOOL _field42;
} UIStateArchive_30954f59;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    struct Reference _field7;
} CanvasSelectionArchive_94c73a5f;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    struct RepeatedPtrField<KN::ThemeCustomTimingCurveArchive> _field7;
    struct ArenaStringPtr _field8;
    struct ThemeArchive _field9;
    struct Reference _field10;
    struct Reference _field11;
    BOOL _field12;
} ThemeArchive_bc14b26f;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedPtrField_54b3089c _field5;
    RepeatedPtrField_54b3089c _field6;
    RepeatedPtrField_54b3089c _field7;
    struct Range _field8;
    struct Reference _field9;
    int _field10;
    int _field11;
    int _field12;
} CanvasSelectionArchive_2fe02f32;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
    struct RepeatedPtrField<TST::CellRange> _field6;
    struct Reference _field7;
    struct CellID _field8;
    struct CellID _field9;
    struct Reference _field10;
    struct CellUIDRegionArchive _field11;
    struct CellUIDRegionArchive _field12;
    struct UUIDCoordArchive _field13;
    struct UUIDCoordArchive _field14;
    int _field15;
} SelectionArchive_2357800d;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct DocumentArchive _field8;
    struct Reference _field9;
    struct Reference _field10;
    struct Reference _field11;
    struct Reference _field12;
    struct Reference _field13;
    struct Reference _field14;
    struct Reference _field15;
    struct Reference _field16;
    BOOL _field17;
    BOOL _field18;
    BOOL _field19;
} DocumentArchive_93fcf748;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<2> _field3;
    struct RepeatedPtrField<TSCH::ChartUIState> _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct Point _field7;
    struct Reference _field8;
    struct Reference _field9;
    struct Size _field10;
    struct Point _field11;
    struct Size _field12;
    struct SelectionPathArchive _field13;
    struct SelectionPathArchive _field14;
    struct Reference _field15;
    struct Reference _field16;
    struct Reference _field17;
    float _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    int _field23;
    unsigned int _field24;
    float _field25;
    BOOL _field26;
    BOOL _field27;
    BOOL _field28;
    BOOL _field29;
    float _field30;
    int _field31;
    float _field32;
    BOOL _field33;
    BOOL _field34;
    float _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    BOOL _field39;
    int _field40;
    BOOL _field41;
    BOOL _field42;
    struct CachedSize _field43;
} UIStateArchive_5c948bd0;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_92283dc2 _field5;
    RepeatedField_92283dc2 _field6;
    struct Reference _field7;
} ChartMediatorArchive_a6ff3532;

typedef struct {
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field1;
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field2;
} Config_b4c5d39d;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    NSUInteger _field2;
    double _field3;
} CDStruct_45a6b6f8;

typedef struct {
    BOOL forceOmitLegend;
    BOOL forceOmitTitle;
    BOOL forceOmitAxisTitle;
    BOOL forceOmitLabelPlacement;
    BOOL forceTitleAtTop;
    BOOL enable3DTightBounds;
    BOOL enable3DScaledDepthBounds;
    long long maxDepthRatioType;
    NSUInteger max3DLimitingSeries;
} CDStruct_b1c75024;

typedef struct {
    BOOL _field1;
    BOOL _field2;
    BOOL _field3;
} CDStruct_2a4d9400;

typedef struct {
    BOOL _field1;
    BOOL _field2;
} CDStruct_3d581f42;

typedef struct {
    BOOL _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_7bd98050;

typedef struct {
    unsigned int useCount;
    id ticket;
} CDStruct_2a021fcd;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
} CDStruct_c8ca99d5;

typedef struct {
    unsigned int _field1;
    long long _field2;
} CDStruct_31de062f;

typedef struct {
    NSUInteger _field1;
    /* void * CDUnknownFunctionPointerType _field2 */;
    void _field3;
} CDStruct_188655c5;

typedef struct {
    NSUInteger _field1;
    id _field2;
    NSUInteger _field3;
    NSUInteger _field4[5];
} CDStruct_70511ce9;

typedef struct {
    NSUInteger _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    unsigned short id;
    BOOL firstOneWin;
    BOOL hasDescendantProperties;
    unsigned short path[6];
} CDStruct_1464e8ba;

typedef struct {
    /* void * CDUnknownFunctionPointerType _field1 */;
    /* void * CDUnknownFunctionPointerType _field2 */;
    /* void * CDUnknownFunctionPointerType _field3 */;
    /* void * CDUnknownFunctionPointerType _field4 */;
    /* void * CDUnknownFunctionPointerType _field5 */;
} CDStruct_ba543347;

typedef struct {
    unsigned int mCurrencyCodeIndex:16;
    unsigned int mDecimalPlaces:8;
    unsigned int mNegativeStyle:3;
    unsigned int mShowThousandsSeparator:1;
    unsigned int mUseAccountingStyle:1;
} CDStruct_50447d3e;

typedef struct {
    unsigned int position:1;
    unsigned int size:1;
    unsigned int inlineSize:1;
} CDStruct_6196388c;

typedef struct {
    unsigned int mUseAutomaticUnits:1;
    int mDurationUnitSmallest;
    int mDurationUnitLargest;
    int mDurationStyle;
} CDStruct_b1177b60;

typedef struct {
    unsigned int formulaID:48;
} CDStruct_8dbd2315;

typedef struct {
    unsigned int mBase:8;
    unsigned int mBasePlaces:8;
    unsigned int mBaseUseMinusSign:1;
} CDStruct_c5e3a123;

typedef struct {
    unsigned int mFractionAccuracy:8;
} CDStruct_7ef9dbe9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    BOOL _field4;
} CDStruct_d230bf23;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    NSUInteger _field4;
} CDStruct_41cea37a;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double skew;
    double skewOffset;
    double scale;
} CDStruct_d6fcdff4;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int _field1;
    NSUInteger _field2;
    BOOL _field3;
} CDStruct_b9fbe577;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long _field1;
    /* void * CDUnknownFunctionPointerType _field2 */;
    /* void * CDUnknownFunctionPointerType _field3 */;
    /* void * CDUnknownFunctionPointerType _field4 */;
    /* void * CDUnknownFunctionPointerType _field5 */;
    /* void * CDUnknownFunctionPointerType _field6 */;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    /* void * CDUnknownFunctionPointerType _field2 */;
    /* void * CDUnknownFunctionPointerType _field3 */;
    /* void * CDUnknownFunctionPointerType _field4 */;
    /* void * CDUnknownFunctionPointerType _field5 */;
} CDStruct_70d275a4;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct CDStruct_183601bc;

typedef struct {
    double _field1;
    CGPoint _field2;
    long long _field3;
    double _field4;
} CDStruct_46b2202e;

typedef struct {
    long long _field1;
    NSUInteger _field2;
    BOOL _field3;
    char _field4;
    NSUInteger _field5;
    NSUInteger _field6;
    NSUInteger _field7;
    BOOL _field8;
    NSRange * _field9;
    NSUInteger _field10;
} CDStruct_64113493;

typedef struct {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
} CDStruct_106f10ff;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    CGAffineTransform _field1;
    CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    CGPoint _field1;
    BOOL _field2;
} CDStruct_40a92360;

typedef struct {
    CGPoint _field1;
    double _field2;
    BOOL _field3;
    NSUInteger _field4;
} CDStruct_460b8ffe;

typedef struct {
    CGPoint _field1;
    CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct TSCERelativeCellCoordinate _field1;
    struct TSCERelativeCellCoordinate _field2;
} CDStruct_d36d9755;

typedef struct {
    struct TSUCellCoord topLeft;
    struct TSUCellCoord bottomRight;
} CDStruct_39acd760;

typedef struct {
    NSRange * _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState _field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont _field10;
    CGColorRef_field11;
    id _field12;
    BOOL _field13;
    int _field14;
    double _field15;
    CGColorRef_field16;
    double _field17;
} CDStruct_3b6efdb6;

typedef struct {
    NSRange * _field1;
    long long _field2;
} CDStruct_9ae92562;

typedef struct {
    id _field1;
    id _field2;
    CGRect _field3;
    id _field4;
    id _field5;
} CDStruct_e0d92598;

typedef struct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberFormatStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        struct {
            unsigned int mSuppressDateFormat:1;
            unsigned int mSuppressTimeFormat:1;
            NSString *mDateTimeFormat;
        } mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        struct {
            NSUUID *mCustomFormatKey;
            TSUCustomFormat *mCustomFormat;
            unsigned int mLegacyID;
            unsigned char mAppliedConditionKey;
        } mCustomFormatStruct;
    } ;
} CDStruct_b1066b25;

typedef struct {
    CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    BOOL _field6;
    CGAffineTransform _field7;
} CDStruct_249a8bf0;

typedef struct {
    CGRect _field1;
    double _field2;
    struct TSWPFontHeightInfo _field3;
    double _field4;
    CGRect _field5;
    double _field6;
    struct TSWPFontHeightInfo _field7;
    CGAffineTransform _field8;
} CDStruct_1af65ba2;

typedef struct {
    CGRect cachedRect;
    CGRect originalCachedRect;
    unsigned int isValid;
} CDStruct_5bfcb38a;

// Ambiguous groups
typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    NSUInteger _field1;
    NSUInteger _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct RefTypeHolder<TSCECellRef, 0> {
    struct TSCECellRef _ref;
} RefTypeHolder_a8d05c9a;

typedef struct RefTypeHolder<TSCECellRef, 1> {
    struct TSCECellRef _field1;
} RefTypeHolder_adbccd1a;

typedef struct RefTypeHolder<TSCECellRef, 2> {
    struct TSCECellRef _field1;
} RefTypeHolder_cfaab535;

typedef struct RefTypeHolder<TSCERangeRef, 0> {
    struct TSCERangeRef _field1;
} RefTypeHolder_1140c985;

typedef struct RefTypeHolder<TSCERangeRef, 1> {
    struct TSCERangeRef _field1;
} RefTypeHolder_45a2a752;

typedef struct RefTypeHolder<TSCERangeRef, 2> {
    struct TSCERangeRef _ref;
} RefTypeHolder_8c6da553;

typedef struct RepeatedField<bool> {
    int _field1;
    int _field2;
    union Pointer _field3;
} RepeatedField_11b8965c;

typedef struct RepeatedField<float> {
    int _field1;
    int _field2;
    union Pointer _field3;
} RepeatedField_75407ea4;

typedef struct RepeatedField<int> {
    int _field1;
    int _field2;
    union Pointer _field3;
} RepeatedField_f3b68cf6;

typedef struct RepeatedField<unsigned int> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
} RepeatedField_92283dc2;

typedef struct RepeatedField<unsigned long long> {
    int current_size_;
    int total_size_;
    union Pointer ptr_;
} RepeatedField_d2055372;

typedef struct RepeatedPtrField<TSCH::GridRow> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_36342b27;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_6c786866;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_e6d64692;

typedef struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_c7c49ab2;

typedef struct RepeatedPtrField<TSD::GeometryArchive> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_27865cdd;

typedef struct RepeatedPtrField<TSP::Color> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_c17961e4;

typedef struct RepeatedPtrField<TSP::ComponentExternalReference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_5bff772f;

typedef struct RepeatedPtrField<TSP::DataInfo> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
} RepeatedPtrField_6277dbb5;

typedef struct RepeatedPtrField<TSP::DataReference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_867c874a;

typedef struct RepeatedPtrField<TSP::FieldPath> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
} RepeatedPtrField_02f83fb8;

typedef struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    struct Arena arena_;
    int current_size_;
    int total_size_;
    struct Rep rep_;
} RepeatedPtrField_f8410f9e;

typedef struct RepeatedPtrField<TSP::Range> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_6e0d89e6;

typedef struct RepeatedPtrField<TSP::Reference> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_54b3089c;

typedef struct RepeatedPtrField<TSP::UUID> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_c4607516;

typedef struct RepeatedPtrField<TSP::UUIDPath> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_4f2d564d;

typedef struct RepeatedPtrField<std::__1::basic_string<char>> {
    struct Arena _field1;
    int _field2;
    int _field3;
    struct Rep _field4;
} RepeatedPtrField_fe7cf120;

typedef struct StateStack<TSCH3D::ObjectState, 6> {
    NSUInteger mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
} StateStack_2a9a65b0;

typedef struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            NSUInteger _lower;
            NSUInteger _upper;
        } ;
    } ;
} UUIDData_5fbc143e;

typedef struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} UUIDMap_b66c2694;

typedef struct UUIDRect<TSP::UUIDRect> {
    vector_4dc5f307 _colIdList;
    vector_4dc5f307 _rowIdList;
} UUIDRect_d701734b;

typedef struct UUIDSet<TSP::UUIDSet> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
} UUIDSet_bcc2db41;

typedef struct __wrap_iter<double *> {
    double _field1;
} __wrap_iter_8fb6ff7c;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct auto_ptr<google::protobuf::Message> {
    struct Message __ptr_;
} auto_ptr_4370f086;

typedef struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 __ptr_;
} auto_ptr_945ad503;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    NSUInteger __cap_;
                    NSUInteger __size_;
                    char __data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    NSUInteger __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_23d93216;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
} box_80622335;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
} box_0260e9b3;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
} box_a3bd9649;

typedef struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e __first_;
        UUIDData_5fbc143e __begin_;
        UUIDData_5fbc143e __end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e __value_;
        } __end_cap_;
    } __map_;
    NSUInteger __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        NSUInteger __value_;
    } __size_;
} deque_5668141c;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
} line_190fbfc7;

typedef struct map<TSTCellUID, TSTCell *, std::__1::less<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __tree<std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::__map_value_compare<TSTCellUID, std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::less<TSTCellUID>, true>, std::__1::allocator<std::__1::__value_type<TSTCellUID, TSTCell *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSTCellUID, std::__1::__value_type<TSTCellUID, TSTCell *>, std::__1::less<TSTCellUID>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
} map_cd95b0b7;

typedef struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} map_2cd530a9;

typedef struct map<unsigned int, TSTTableHeaderInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableHeaderInfo *>>> {
    struct __tree<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
} map_9aa73377;

typedef struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} map_4bea934e;

typedef struct multimap<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} multimap_0345fd13;

typedef struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
} multimap_41f9c887;

typedef struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} multiset_10d8bac2;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
} pair_4d5b4bcf;

typedef struct pair<bool, TSCH3DShaderVariableLinkage *> {
    BOOL _field1;
    id _field2;
} pair_64bf96b1;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
} plane_849e6053;

typedef struct range<double> {
    double _field1;
    double _field2;
} range_2a4e38ce;

typedef struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
} range_f61e6b34;

typedef struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} set_25e6ba53;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            NSUInteger _field1;
            NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_3d57cb01;

typedef struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
} set_fd9a82b7;

typedef struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> __begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            NSUInteger __value_;
        } __pair3_;
    } __tree_;
} set_5fd94db8;

typedef struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            NSUInteger _field1;
        } _field3;
    } _field1;
} set_713dd2e1;

typedef struct shared_ptr<TSKCO::AbstractOperation> {
    struct AbstractOperation _field1;
    struct __shared_weak_count _field2;
} shared_ptr_f167ad79;

typedef struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo __ptr_;
    struct __shared_weak_count __cntrl_;
} shared_ptr_bafc106c;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray __ptr_;
    struct __shared_weak_count __cntrl_;
} shared_ptr_1a254aea;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter _field1;
    struct __shared_weak_count _field2;
} shared_ptr_b124cf66;

typedef struct shared_ptr<google::protobuf::Message> {
    struct Message _field1;
    struct __shared_weak_count _field2;
} shared_ptr_cd1ed623;

typedef struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet __ptr_;
    struct __shared_weak_count __cntrl_;
} shared_ptr_b9bbcad9;

typedef struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
} stack_00018fe6;

typedef struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
} stack_e5003a0d;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec2<bool> {
    union {
        BOOL x;
        BOOL r;
        BOOL s;
    } ;
    union {
        BOOL y;
        BOOL g;
        BOOL t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

typedef struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
} tvec4_f99fd489;

typedef struct unordered_map<TSCECategoryLevel, int, std::__1::hash<TSCECategoryLevel>, std::__1::equal_to<TSCECategoryLevel>, std::__1::allocator<std::__1::pair<const TSCECategoryLevel, int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECategoryLevel, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_3e9d252a;

typedef struct unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTConditionalStyleSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_9596ee37;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_facfd2e8;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_8a2ad1cf;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_a2587d2e;

typedef struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_ddbde191;

typedef struct unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::__1::hash<TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, std::__1::allocator<std::__1::pair<const TSUModelCellCoord, TSUModelCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_c82faa35;

typedef struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_caa2f3b1;

typedef struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_38045d47;

typedef struct unordered_map<unsigned long, TSPLazyReference *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSPLazyReference *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::hash<unsigned long>, true>> {
            NSUInteger _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSPLazyReference *>, std::__1::equal_to<unsigned long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_52392278;

typedef struct unordered_map<unsigned short, double, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, double>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, double>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, double>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::hash<unsigned short>, true>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, double>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_51170667;

typedef struct unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
    struct __hash_table<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEArgumentType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEArgumentType>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCEArgumentType>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_07fa9bdb;

typedef struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
} unordered_set_c6a929bd;

typedef struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            NSUInteger __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_cb28a53b;

typedef struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int __begin_;
    int __end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int __value_;
    } __end_cap_;
} vector_e38595b5;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> _field1;
    struct ObjcSharedPtr<GQDWrapPoint> _field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> _field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<RefTypeHolder<TSCERangeRef, 0>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
    RefTypeHolder_1140c985 _field1;
    RefTypeHolder_1140c985 _field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 0>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
        RefTypeHolder_1140c985 _field1;
    } _field3;
} vector_40295af5;

typedef struct vector<RefTypeHolder<TSCERangeRef, 1>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
    RefTypeHolder_45a2a752 _field1;
    RefTypeHolder_45a2a752 _field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 1>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
        RefTypeHolder_45a2a752 _field1;
    } _field3;
} vector_e93a2b69;

typedef struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    NSUInteger _field1;
    NSUInteger _field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        NSUInteger _field1;
    } _field3;
} vector_2bba1c52;

typedef struct vector<TSCECategoryLevel, std::__1::allocator<TSCECategoryLevel>> {
    unsigned char _field1;
    unsigned char _field2;
    struct __compressed_pair<TSCECategoryLevel *, std::__1::allocator<TSCECategoryLevel>> {
        unsigned char _field1;
    } _field3;
} vector_ae66d7ff;

typedef struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef _field1;
    struct TSCECategoryRef _field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef _field1;
    } _field3;
} vector_2431c21e;

typedef struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef __begin_;
    struct TSCECellRef __end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef __value_;
    } __end_cap_;
} vector_4115f7f8;

typedef struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula __begin_;
    struct TSCEFormula __end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula __value_;
    } __end_cap_;
} vector_eeb872f1;

typedef struct vector<TSCEFunctionArgSpec, std::__1::allocator<TSCEFunctionArgSpec>> {
    struct TSCEFunctionArgSpec __begin_;
    struct TSCEFunctionArgSpec __end_;
    struct __compressed_pair<TSCEFunctionArgSpec *, std::__1::allocator<TSCEFunctionArgSpec>> {
        struct TSCEFunctionArgSpec __value_;
    } __end_cap_;
} vector_2a3fe66d;

typedef struct vector<TSCEGroupingColumnChange, std::__1::allocator<TSCEGroupingColumnChange>> {
    struct TSCEGroupingColumnChange __begin_;
    struct TSCEGroupingColumnChange __end_;
    struct __compressed_pair<TSCEGroupingColumnChange *, std::__1::allocator<TSCEGroupingColumnChange>> {
        struct TSCEGroupingColumnChange __value_;
    } __end_cap_;
} vector_6018b200;

typedef struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate __begin_;
    struct TSCERangeCoordinate __end_;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate __value_;
    } __end_cap_;
} vector_f772ab4d;

typedef struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef _field1;
    struct TSCERangeRef _field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef _field1;
    } _field3;
} vector_5a16d233;

typedef struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue _field1;
    struct TSCEReferenceValue _field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue _field1;
    } _field3;
} vector_99ef3555;

typedef struct vector<TSCESubFormulaOwnerIndex, std::__1::allocator<TSCESubFormulaOwnerIndex>> {
    unsigned short _field1;
    unsigned short _field2;
    struct __compressed_pair<TSCESubFormulaOwnerIndex *, std::__1::allocator<TSCESubFormulaOwnerIndex>> {
        unsigned short _field1;
    } _field3;
} vector_8b45bc7e;

typedef struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue __begin_;
    struct TSCEValue __end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue __value_;
    } __end_cap_;
} vector_a1208d01;

typedef struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 _field1;
    plane_849e6053 _field2;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 _field1;
    } _field3;
} vector_5e6a89be;

typedef struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> __begin_;
    struct PODType<unsigned char> __end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> __value_;
    } __end_cap_;
} vector_1798193c;

typedef struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> __begin_;
    struct PODType<unsigned short> __end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> __value_;
    } __end_cap_;
} vector_e28bcd8e;

typedef struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType __begin_;
    struct TSCH3DShaderVariableScopeType __end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType __value_;
    } __end_cap_;
} vector_22c20f1a;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    CDStruct_183601bc _field1;
    CDStruct_183601bc _field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        CDStruct_183601bc _field1;
    } _field3;
} vector_8bba9095;

typedef struct vector<TSKOperationPropertyId, std::__1::allocator<TSKOperationPropertyId>> {
    unsigned short _field1;
    unsigned short _field2;
    struct __compressed_pair<TSKOperationPropertyId *, std::__1::allocator<TSKOperationPropertyId>> {
        unsigned short _field1;
    } _field3;
} vector_941b75ab;

typedef struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference __begin_;
    struct UnarchiverReference __end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference __value_;
    } __end_cap_;
} vector_adb99b2c;

typedef struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference __begin_;
    struct UnarchiverRepeatedReference __end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference __value_;
    } __end_cap_;
} vector_cc556b2d;

typedef struct vector<TSTCell *, std::__1::allocator<TSTCell *>> {
    id __begin_;
    id __end_;
    struct __compressed_pair<TSTCell *__strong *, std::__1::allocator<TSTCell *>> {
        id __value_;
    } __end_cap_;
} vector_73284f0b;

typedef struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID __begin_;
    struct TSTCellUID __end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID __value_;
    } __end_cap_;
} vector_7670e6f2;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e __begin_;
    UUIDData_5fbc143e __end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e __value_;
    } __end_cap_;
} vector_4dc5f307;

typedef struct vector<TSU::UUIDRect<TSP::UUIDRect>, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
    UUIDRect_d701734b __begin_;
    UUIDRect_d701734b __end_;
    struct __compressed_pair<TSU::UUIDRect<TSP::UUIDRect>*, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
        UUIDRect_d701734b __value_;
    } __end_cap_;
} vector_793e6c56;

typedef struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord __begin_;
    struct TSUCellCoord __end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord __value_;
    } __end_cap_;
} vector_38b190b0;

typedef struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect __begin_;
    struct TSUCellRect __end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect __value_;
    } __end_cap_;
} vector_e87daf7b;

typedef struct vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect>> {
    struct TSUModelCellRect _field1;
    struct TSUModelCellRect _field2;
    struct __compressed_pair<TSUModelCellRect *, std::__1::allocator<TSUModelCellRect>> {
        struct TSUModelCellRect _field1;
    } _field3;
} vector_54ceaeac;

typedef struct vector<TSUModelColumnIndex, std::__1::allocator<TSUModelColumnIndex>> {
    struct TSUModelColumnIndex __begin_;
    struct TSUModelColumnIndex __end_;
    struct __compressed_pair<TSUModelColumnIndex *, std::__1::allocator<TSUModelColumnIndex>> {
        struct TSUModelColumnIndex __value_;
    } __end_cap_;
} vector_5e7df3d8;

typedef struct vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>> {
    struct TSUViewCellRect _field1;
    struct TSUViewCellRect _field2;
    struct __compressed_pair<TSUViewCellRect *, std::__1::allocator<TSUViewCellRect>> {
        struct TSUViewCellRect _field1;
    } _field3;
} vector_1235e7c3;

typedef struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc __begin_;
    CDStruct_183601bc __end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc __value_;
    } __end_cap_;
} vector_e3deae5b;

typedef struct vector<NSRange *, std::__1::allocator<NSRange *>> {
    NSRange * __begin_;
    NSRange * __end_;
    struct __compressed_pair<NSRange * *, std::__1::allocator<NSRange *>> {
        NSRange * __value_;
    } __end_cap_;
} vector_b5e32e34;

typedef struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity __begin_;
    struct _TSWPCharIndexAndAffinity __end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity __value_;
    } __end_cap_;
} vector_7c702c4c;

typedef struct vector<bool, std::__1::allocator<bool>> {
    NSUInteger __begin_;
    NSUInteger __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
} vector_553f084a;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> _field1;
    struct segment_data<double> _field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> _field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<double, std::__1::allocator<double>> {
    double __begin_;
    double __end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double __value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<float, std::__1::allocator<float>> {
    float __begin_;
    float __end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float __value_;
    } __end_cap_;
} vector_7584168e;

typedef struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    struct tvec1<float> __begin_;
    struct tvec1<float> __end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        struct tvec1<float> __value_;
    } __end_cap_;
} vector_9ed239ac;

typedef struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d __begin_;
    tvec2_84d5962d __end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d __value_;
    } __end_cap_;
} vector_d73af98f;

typedef struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 __begin_;
    tvec3_17f03ce0 __end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 __value_;
    } __end_cap_;
} vector_7200ab52;

typedef struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d __begin_;
    tvec4_ac57c72d __end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d __value_;
    } __end_cap_;
} vector_ccfc515b;

typedef struct vector<int, std::__1::allocator<int>> {
    int __begin_;
    int __end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int __value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<long, std::__1::allocator<long>> {
    long long __begin_;
    long long __end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long __value_;
    } __end_cap_;
} vector_afed86a5;

typedef struct vector<std::__1::pair<TSCEValue, TSUCellCoord>, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
    struct pair<TSCEValue, TSUCellCoord> _field1;
    struct pair<TSCEValue, TSUCellCoord> _field2;
    struct __compressed_pair<std::__1::pair<TSCEValue, TSUCellCoord>*, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
        struct pair<TSCEValue, TSUCellCoord> _field1;
    } _field3;
} vector_06892659;

typedef struct vector<std::__1::pair<unsigned int, unsigned long>, std::__1::allocator<std::__1::pair<unsigned int, unsigned long>>> {
    struct pair<unsigned int, unsigned long> _field1;
    struct pair<unsigned int, unsigned long> _field2;
    struct __compressed_pair<std::__1::pair<unsigned int, unsigned long>*, std::__1::allocator<std::__1::pair<unsigned int, unsigned long>>> {
        struct pair<unsigned int, unsigned long> _field1;
    } _field3;
} vector_ceceab0b;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char __begin_;
    char __end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char __value_;
    } __end_cap_;
} vector_aab22ae2;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int __begin_;
    unsigned int __end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int __value_;
    } __end_cap_;
} vector_12da65de;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    NSUInteger __begin_;
    NSUInteger __end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        NSUInteger __value_;
    } __end_cap_;
} vector_06e666a8;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short __begin_;
    unsigned short __end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short __value_;
    } __end_cap_;
} vector_8d85e9cb;

typedef struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    id /* CDUnknownBlockType */ __begin_;
    id /* CDUnknownBlockType */ __end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        id /* CDUnknownBlockType */ __value_;
    } __end_cap_;
} vector_3c415888;

#pragma mark Named Unions

union AllocatedData {
    struct KeyValue _field1;
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> _field2;
};

union Pointer {
    struct Arena arena;
    struct Rep rep;
};

#pragma mark Typedef'd Unions

// Ambiguous groups
typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int _field1;
    int _field2;
    int _field3;
} CDUnion_58123c5d;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

