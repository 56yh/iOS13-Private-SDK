//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Dec  5 2019 09:59:31).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class MISSING_TYPE;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct mach_task_basic_info {
    NSUInteger virtual_size;
    NSUInteger resident_size;
    NSUInteger resident_size_max;
    struct time_value user_time;
    struct time_value system_time;
    int policy;
    int suspend_count;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct task_vm_info {
    NSUInteger virtual_size;
    int region_count;
    int page_size;
    NSUInteger resident_size;
    NSUInteger resident_size_peak;
    NSUInteger device;
    NSUInteger device_peak;
    NSUInteger internal;
    NSUInteger internal_peak;
    NSUInteger external;
    NSUInteger external_peak;
    NSUInteger reusable;
    NSUInteger reusable_peak;
    NSUInteger purgeable_volatile_pmap;
    NSUInteger purgeable_volatile_resident;
    NSUInteger purgeable_volatile_virtual;
    NSUInteger compressed;
    NSUInteger compressed_peak;
    NSUInteger compressed_lifetime;
    NSUInteger phys_footprint;
    NSUInteger min_address;
    NSUInteger max_address;
    long long ledger_phys_footprint_peak;
    long long ledger_purgeable_nonvolatile;
    long long ledger_purgeable_novolatile_compressed;
    long long ledger_purgeable_volatile;
    long long ledger_purgeable_volatile_compressed;
    long long ledger_tag_network_nonvolatile;
    long long ledger_tag_network_nonvolatile_compressed;
    long long ledger_tag_network_volatile;
    long long ledger_tag_network_volatile_compressed;
    long long ledger_tag_media_footprint;
    long long ledger_tag_media_footprint_compressed;
    long long ledger_tag_media_nofootprint;
    long long ledger_tag_media_nofootprint_compressed;
    long long ledger_tag_graphics_footprint;
    long long ledger_tag_graphics_footprint_compressed;
    long long ledger_tag_graphics_nofootprint;
    long long ledger_tag_graphics_nofootprint_compressed;
    long long ledger_tag_neural_footprint;
    long long ledger_tag_neural_footprint_compressed;
    long long ledger_tag_neural_nofootprint;
    long long ledger_tag_neural_nofootprint_compressed;
    NSUInteger limit_bytes_remaining;
    int decompressions;
};

struct time_value {
    int seconds;
    int microseconds;
};

struct vector<int, std::__1::allocator<int>> {
    int _field1;
    int _field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int _field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    MISSING_TYPE *columns[4];
} CDStruct_14d5dc5e;

typedef struct {
    double values;
    double scaleMinimum;
    double scaleMaximum;
    double valueMinimum;
    double valueMaximum;
    double count;
} CDStruct_79de6ffd;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    struct {
        long long location;
        long long length;
    } range;
    NSUInteger attributes;
} CDStruct_573f6e06;

// Template types
typedef struct vector<int, std::__1::allocator<int>> {
    int _field1;
    int _field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int _field1;
    } _field3;
} vector_3203cf93;

